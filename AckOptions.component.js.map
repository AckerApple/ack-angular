{"version":3,"sources":["../src/AckOptions.component.ts"],"names":[],"mappings":"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","file":"AckOptions.component.js","sourceRoot":"","sourcesContent":["import { array } from \"./pipes.class\"\n\nimport {\n  ContentChild,\n  TemplateRef,\n  Component,\n  Input,\n  Output,\n  EventEmitter\n} from \"@angular/core\"\n\nimport { string as ackOptions } from \"./templates/ack-options.pug\"\n export class AckOptions{\n   public array = []\n   public stylize = true\n   public multiple = false\n   public toggleable = false//multiple must be false\n   public model\n   public modelChange = new EventEmitter()\n    public templateRef:TemplateRef<any>\n   private ref\n   public refChange = new EventEmitter()\n\n  ngOnInit(){\n    setTimeout(()=>{\n      this.ref = Object.assign(this,this.ref)\n      this.refChange.emit(this.ref)\n    }, 0)\n  }\n\n  selectItem(item){\n    if(this.multiple){\n      const modelIndex = this.modelIndex(item)\n      if(modelIndex>=0){\n        this.model.splice(modelIndex, 1)\n      }else{\n        this.model.push(item)\n      }\n    }else{\n      if(this.toggleable && this.model==item){\n        this.model=null\n      }else{\n        this.model=item\n      }\n    }\n    this.modelChange.emit(this.model)\n  }\n\n  modelIndex(item){\n    this.model = array(this.model)\n    for(let i=this.model.length-1; i >= 0; --i){\n      if(this.model[i]==item)return i\n    }\n    return -1\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector:'ack-options',\n  template:ackOptions\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'array': [{ type: Input },],\n'stylize': [{ type: Input },],\n'multiple': [{ type: Input },],\n'toggleable': [{ type: Input },],\n'model': [{ type: Input },],\n'modelChange': [{ type: Output },],\n'templateRef': [{ type: ContentChild, args: [TemplateRef, ] },{ type: Input },],\n'ref': [{ type: Input },],\n'refChange': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}