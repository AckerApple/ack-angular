{"version":3,"sources":["../src/AckOffline.class.ts"],"names":[],"mappings":"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","file":"AckOffline.class.js","sourceRoot":"","sourcesContent":["//import localForage from \"localforage/dist/localforage.js\"\nimport localForage from \"localforage\"\n//import localForage from \"./localforage-build\"\n//import localForage from \"./localforage-build\"\n\nconst supportsNav = typeof(navigator)!='undefined'\n\nexport class AckOffline{\n  public prefix:string\n  public handlers\n\n  constructor(){\n    this.prefix = \"offline\"\n    this.handlers = []\n  }\n\n\n  remove(name){\n    return localForage.removeItem(this.prefix+'-'+name)\n  }\n\n  get(name) {\n    return localForage.getItem(this.prefix+'-'+name)\n  }\n\n  set(name, data) {\n    return localForage.setItem(this.prefix+'-'+name, data)\n  }\n\n  validate(data, config) {\n    const exists = data !== null && typeof data.cache !== \"undefined\"\n    return exists && !this.expired(data._timestamp, config.expires)\n  }\n\n  expired(stamp, expires){\n    const diff = Date.now() - expires\n    const expired = stamp<=diff\n    return expires && expired ? true : false\n  }\n\n  /**\n    Creates que handler. Returns self. Most likely, use newQueModel\n    @options - {\n      handler : dataArray=> - overrides $http posting for que processing\n      onData : data=> - callback fired everytime data is retrieved\n      expires: Number - how many milisecs can a saved transmission live in cache\n    }\n  */\n  /*newQueModel(name,options={}){\n    options.name = name\n    this.addQueModel(name, options)\n    return new QueModel(this, options)\n  }*/\n\n  /**\n    Creates que handler. Returns self. Most likely, use newQueModel\n    @options - {\n      handler : dataArray=> - overrides $http posting for que processing\n      onData : data=> - callback fired everytime data is retrieved\n    }\n  */\n  /*addQueModel(name,options={}){\n    return this.registerQueueHandler(name, trans=>{\n      let prom = this.$http(trans)\n\n      if(options.onData){\n        prom = prom.then(response=>{\n          if(response.data){\n            options.onData(response.data)\n          }\n        })\n      }\n\n      return prom.catch(e=>this.ErrorHandler.record(e))\n    })\n  }*/\n\n  paramCache(name, options){\n    options = options || {}\n    options.param = options.param || []\n    return this.getCache(name, options)\n  }\n\n  paramSaveCache(name, options){\n    return this.paramCache(name, options)\n    .then(items=>this.setCache(name,items))\n  }\n\n  getCache(name, options){\n    options = options || {}\n    return this.get(name)\n    .then(data=>{\n      if( this.validate(data, options) ){\n        return data['cache']\n      }\n\n      if(data){\n        if(data['cache']==null && data['_timestamp']==null){\n          return data\n        }\n        \n        if(!options.expires){\n          return data['cache']\n        }\n\n        const isCheckExpired = data && data['_timestamp'] && options.allowExpired\n        const expired = data && data['_timestamp'] && this.expired(data['_timestamp'], options.expires)\n        const isAllowExpired = isCheckExpired && expired\n        if(isAllowExpired){\n          return data['cache']\n        }\n\n        if(expired){\n          const err = new Error('Cache expired for '+name)\n          err['code'] = 401\n        }\n      }\n\n      if(options.param)return options.param\n\n      var err = new Error('No valid cache found for '+name)\n      err['code'] = 404\n\n      return new Promise((res,rej)=>{\n        rej(err)\n      })\n    })\n  }\n\n  setCache(name, cache) {\n    const newCache = {\n      _timestamp: Date.now()//,cache: response.data\n    }\n\n    return this.get(name)\n    .then( data=>{\n      data = data && data.constructor!=String ? data : {}\n\n      Object.assign(data, newCache)\n      if(cache && cache.constructor==String){\n        data['cache'] = cache\n      }else if(data['cache'] && data['cache'].constructor!=String){\n        Object.assign(data['cache'], cache)\n      }else{\n        data['cache'] = cache\n      }\n\n      return data\n    })//paste cache over cache, leave all else alone\n    .then( data=>this.set(name, data) )\n  }\n\n  cacheResponse(name, response) {\n    return this.setCache(name, response.data)\n  }\n\n  getQueue(name) {\n    return this.get(name)\n    .then(data => data && data['queue'] ? data['queue'] : [])\n  }\n\n  setQueue(name, queue) {\n    return this.get(name)\n    .then(data => Object.assign({}, data, {queue}))\n    .then(data => this.set(name, data))\n  }\n\n  clearQueue(name) {\n    return this.get(name)\n    .then(data => {\n      data['queue'] = []\n      this.set(name, data)\n    })\n  }\n\n  /** post/put que */\n  enqueue(name, queueData) {\n    if(supportsNav && navigator.onLine) {\n      const handler = this.handlers.find(handler => handler.name === name)\n      if(handler)return handler(queueData)\n    }\n\n    return this.get(name)\n    .then(data => {\n      data = data || {}\n      data['queue'] = data['queue'] || []\n      \n      if(queueData.forEach){\n        queueData.forEach(x=>{\n          data['queue'].push( x )\n        })\n      }else{\n        data['queue'].push( queueData )\n      }\n      return this.set(name, data)\n    })\n  }\n\n  registerQueueHandler(name, handler) {\n    //handler = handler || this.getQueHandler.bind(this)\n    this.handlers.push({name, handler})\n    return this\n  }\n\n  processQueues(){\n    let x=this.handlers.length-1, promises = []\n\n    for(; x >= 0; --x){\n      let hand = this.handlers[x]\n\n      let prom = this.getQueue(hand.name)\n      .then(queue => queue.forEach(x => hand.handler(x)))\n      .then(() => this.clearQueue(hand.name))\n\n      promises.push(prom)\n    }\n\n    return Promise.all(promises)\n  }\n  \n  /*getQueHandler(item) {\n    return this.$http(item)\n  }*/\n\n  /*promiseNameArray(){\n    let keys = []\n    return localForage.iterate((_, k) => {\n      if (k.startsWith(this.prefix)) {\n        keys.push( k.substring(this.prefix.length+1, k.length) )\n      }\n    })\n    .then(()=>keys)\n  }\n\n  clear() {\n    this.promiseNameArray().then((keys) => keys.forEach(name=>this.remove(name)))\n  }*/\n}\n\n//AckOffline.$inject = [\"$http\"]\n\n\n/**\n  @config {expires, allowExpired, name}\n*/\n/*\nclass QueModel{\n  constructor(AckOffline, config){\n    this.AckOffline = AckOffline\n    this.config = config\n  }\n\n  mergeConfig(config){\n    Object.assign(config, this.config)\n    this.config = config\n    return this\n  }\n\n  get(){\n    return this.AckOffline.get(this.config.name)\n  }\n\n  set(data){\n    return this.AckOffline.set(this.config.name, data)\n  }\n}*/"]}