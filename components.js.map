{"version":3,"sources":["../src/components.ts"],"names":[],"mappings":"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","file":"components.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef\n} from \"@angular/core\"\n\nimport {string as readerHeaderBody} from \"./templates/reader-header-body.pug\"\n\n/** adds form element onchange listener via addEventListener('change') that calls formChanged scope argument */\n export class FormChanged{\n  static parameters = [[ElementRef]]\n  public onChange\n\n   public formChanged = new EventEmitter()\n\n  constructor(public element:ElementRef){\n    console.log('launched')\n\n    this.onChange = function(event){\n      this.formChanged.emit(event)\n    }.bind(this)\n\n    element.nativeElement.addEventListener('change',this.onChange)\n  }\n\n  ngOnDestroy(){\n    this.element.nativeElement.removeEventListener('change',this.onChange)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:'[formChanged]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'formChanged': [{ type: Output },],\n};\n}\n\n\n export class ReaderHeaderBody {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector:'reader-header-body',\n  template:readerHeaderBody\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class ReaderHeader {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:'reader-header'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class ReaderBody {\n  static parameters = [[ElementRef]]\n\n  constructor(public element: ElementRef){\n    element.nativeElement.style.height = '100%';\n    element.nativeElement.style.display = 'block';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\"reader-body\"\n  //,parameters:[[ElementRef]]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\n export class ScreenWidthModel{\n  public window\n  public onResize\n\n   public screenWidthModel\n   public screenWidthModelChange = new EventEmitter()\n\n  constructor(){\n    this.window = window\n\n    this.onResize = function(){\n      if(this.screenWidthModel !== window.innerWidth){\n        this.screenWidthModel = window.innerWidth\n        this.screenWidthModelChange.emit(this.screenWidthModel)\n      }\n    }.bind(this)\n\n    window.addEventListener('resize', this.onResize)\n  }\n\n  ngAfterViewInit(){\n    this.screenWidthModel = this.window.innerWidth\n    this.screenWidthModelChange.emit(this.screenWidthModel)\n  }\n\n  ngOnDestroy(){\n    window.removeEventListener(this.onResize)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  //inputs:['screen-height-model'],\n  selector: '[screenWidthModel]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'screenWidthModel': [{ type: Input },],\n'screenWidthModelChange': [{ type: Output },],\n};\n}\n\n export class ScreenScrollModelY{\n  public window\n  public onScroll\n\n   public screenScrollModelY\n   public screenScrollModelYChange = new EventEmitter()\n\n  constructor(){\n    this.onScroll = function(){\n      this.screenScrollModelY = window['pageYOffset']\n      this.screenScrollModelYChange.emit(this.screenScrollModelY)\n    }.bind(this)\n  }\n  \n  ngOnInit(){\n    this.onScroll()\n    window['addEventListener'](\"scroll\", this.onScroll)\n  }\n\n  ngOnDestroy(){\n    window['removeEventListener'](\"scroll\", this.onScroll)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  //inputs:['screen-height-model'],\n  selector: '[screenScrollModelY]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'screenScrollModelY': [{ type: Input },],\n'screenScrollModelYChange': [{ type: Output },],\n};\n}\n\n export class ScreenHeightModel{\n  public window\n  public onResize\n\n   public screenHeightModel\n   public screenHeightModelChange = new EventEmitter()\n\n  constructor(){\n    this.window = window\n\n    this.onResize = function(){\n      if(this.screenHeightModel !== window.innerHeight){\n        this.screenHeightModel = window.innerHeight\n        this.screenHeightModelChange.emit(this.screenHeightModel)\n      }\n    }.bind(this)\n\n    window.addEventListener('resize', this.onResize)\n  }\n\n  ngAfterViewInit(){\n    this.screenHeightModel = this.window.innerHeight\n    this.screenHeightModelChange.emit(this.screenHeightModel)\n  }\n\n  ngOnDestroy(){\n    window.removeEventListener(this.onResize)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  //inputs:['screen-height-model'],\n  selector: '[screenHeightModel]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'screenHeightModel': [{ type: Input },],\n'screenHeightModelChange': [{ type: Output },],\n};\n}\n\n/** runs shake instructions when condition returns a truthy value */\n export class ShakeOn {\n   public shakeOn\n   public shakeThen = new EventEmitter()\n\n   public shakeForMs\n   public shakeForMsChange = new EventEmitter()\n\n   public shakeType\n   public shakeTypeChange = new EventEmitter()\n  \n   public shakeRef\n   public shakeRefChange = new EventEmitter()\n  \n  public shakeTypes = ['shake-slow','shake-hard','shake-little','shake-horizontal','shake-vertical','shake-rotate','shake-opacity','shake-crazy']\n\n  constructor(public element:ElementRef){}\n\n  ngOnInit(){\n    this.shakeForMs = this.shakeForMs || 2000\n    this.shakeRef = this\n    this.shakeType = this.shakeType || 'shake-slow'\n    \n    this.shakeRefChange.emit( this.shakeRef )\n    this.shakeTypeChange.emit( this.shakeType )\n    this.shakeForMsChange.emit( this.shakeForMs )\n  }\n\n  ngOnChanges(changes){\n    if(changes.shakeOn && changes.shakeOn.currentValue && changes.shakeOn.currentValue!=changes.shakeOn.previousValue){\n      this.onTrue()\n    }\n  }\n\n  onFalse(){\n    removeClass(this.element.nativeElement, 'shake-constant')\n    removeClass(this.element.nativeElement, this.shakeType||'shake-slow')\n  }\n\n  onTrue(){\n    addClass(this.element.nativeElement, 'shake-constant')\n    addClass(this.element.nativeElement, this.shakeType||'shake-slow')\n\n    setTimeout(()=>{\n      //$scope.shakeOnController.shakeOn = false\n      this.onFalse()\n      this.shakeThen.emit(this)\n    }, this.shakeForMs);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:'[shakeOn]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'shakeOn': [{ type: Input },],\n'shakeThen': [{ type: Output },],\n'shakeForMs': [{ type: Input },],\n'shakeForMsChange': [{ type: Output },],\n'shakeType': [{ type: Input },],\n'shakeTypeChange': [{ type: Output },],\n'shakeRef': [{ type: Input },],\n'shakeRefChange': [{ type: Output },],\n};\n}\n/** runs shake instructions when model changes to a truthy value */\n//.directive('shakeModel', shakeModel)\n/*\nfunction shakeOnDirective($timeout) {\n  return {\n    restrict:'A',\n    scope:{},\n    bindToController:{\n      shakeOn:'=?', shakeForMs:'=?', shakeType:'=?', shakeThen:'&', shakeRef:'=?'\n    },\n    controller:shakeOn,\n    controllerAs:'shakeOnController',\n    link: function($scope, element, attrs){}\n  };\n}\nshakeOnDirective.$inject=['$timeout']\n*/\n\n/** runs shake instructions when model changes to a truthy value */\n/*\nfunction shakeModel($timeout) {\n  return {\n    restrict:'A',\n    scope:{},\n    bindToController:{\n      shakeModel:'=?', shakeForMs:'=?', shakeType:'=?', shakeRef:'=?'\n    },\n    controller:shakeOn,\n    controllerAs:'shakeModelController',\n    link: function($scope, element, attrs) {\n      $scope.shakeModelController.shakeForMs = $scope.shakeModelController.shakeForMs || 2000\n      $scope.shakeModelController.shakeType = $scope.shakeModelController.shakeType || 'shake-slow'\n\n      function onTrue(){\n        element.addClass('shake-constant')\n        element.addClass($scope.shakeModelController.shakeType)\n\n        $timeout(function() {\n          $scope.shakeModelController.shakeModel = false\n          element.removeClass('shake-constant')\n          element.removeClass($scope.shakeModelController.shakeType)\n          $scope.$apply()\n        }, $scope.shakeModelController.shakeForMs);\n      }\n\n      function onChange(value) {\n        if(value) {\n          onTrue()\n        }else{\n          element.removeClass('shake-constant')\n          element.removeClass($scope.shakeModelController.shakeType)\n        }\n      }\n\n      function watch(){\n        return $scope.shakeModelController.shakeModel\n      }\n\n      $scope.$watch(watch, onChange);\n    }\n  };\n}\nshakeModel.$inject = ['$timeout']\n*/\n\nexport function hasClass(el, className) {\n  if (el.classList)\n    return el.classList.contains(className)\n  else\n    return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'))\n}\n\nexport function addClass(el, className) {\n  if (el.classList){\n    el.classList.add(className)\n  }\n  else if (!hasClass(el, className)) el.className += \" \" + className\n}\n\nexport function removeClass(el, className) {\n  if (el.classList)\n    el.classList.remove(className)\n  else if (hasClass(el, className)) {\n    var reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')\n    el.className=el.className.replace(reg, ' ')\n  }\n}\n\nexport const declarations = [\n  FormChanged,\n  ScreenScrollModelY,\n  ScreenHeightModel,\n  ScreenWidthModel,\n  ReaderHeaderBody,\n  ReaderHeader,\n  ReaderBody,\n  ShakeOn\n]\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}