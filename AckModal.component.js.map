{"version":3,"sources":["../src/AckModal.component.ts"],"names":[],"mappings":"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","file":"AckModal.component.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef\n} from \"@angular/core\"\n\nimport { string as ackModal } from \"./templates/ack-modal.pug\"\n export class AckModal{\n   public onClose = new EventEmitter()\n  //@Input() public size:string//'full' or null\n   public wrapStyle\n   public wrapCellStyle\n   public allowClose = true\n   public backgroundColor\n   public backgroundColorChange = new EventEmitter()\n   private ref\n   public refChange = new EventEmitter()\n\n  constructor(public element:ElementRef){\n    //after possible double click, close on outside content click\n    setTimeout(()=>this.clickListenForClose(), 400)\n\n    element.nativeElement.style.position = 'fixed'\n    element.nativeElement.style.top = 0\n    element.nativeElement.style.left = 0\n    element.nativeElement.style.zIndex = 20;\n    element.nativeElement.style.height = '100%';\n    element.nativeElement.style.width = '100%'\n    element.nativeElement.style.overflow = 'auto';\n    element.nativeElement.style.display = 'block';\n  }\n\n  clickListenForClose(){\n    this.element.nativeElement.addEventListener('click', event=>{\n      if(!this.allowClose)return false\n\n      var eTar = event.srcElement || event.toElement || event.target\n\n      if(eTar == this.element.nativeElement.children[0]){\n        this.close()\n      }\n    })\n  }\n\n  ngOnInit(){\n    setTimeout(()=>{\n      this.ref = Object.assign(this,this.ref)\n      this.refChange.emit(this.ref)\n\n      this.backgroundColor = this.backgroundColor || 'rgba(255,255,255,0.95)'\n      this.backgroundColorChange.emit(this.backgroundColor)\n    }, 0)\n  }\n\n  close(){\n    this.onClose.emit(this)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector:'ack-modal',\n  template:ackModal\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onClose': [{ type: Output },],\n'wrapStyle': [{ type: Input },],\n'wrapCellStyle': [{ type: Input },],\n'allowClose': [{ type: Input },],\n'backgroundColor': [{ type: Input },],\n'backgroundColorChange': [{ type: Output },],\n'ref': [{ type: Input },],\n'refChange': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}