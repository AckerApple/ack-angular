{"version":3,"sources":["../src/pipes.ts"],"names":[],"mappings":"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","file":"pipes.js","sourceRoot":"","sourcesContent":["import { Pipe } from '@angular/core';\nimport { pipes } from \"./pipes.class\"\nimport {\n  SafeStyle as SafeStyler,\n  SafeResourceUrl,\n  DomSanitizer\n} from '@angular/platform-browser';\n\n/* ONLY THIS FILE */\n   export class Stringify {\n    transform(input, spaces) {\n      return JSON.stringify(input, null, spaces)\n    }\n  static decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'stringify'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n   export class ForceArray {\n    transform(input, repeat, repeatValue) {\n      return pipes.array(input, repeat, repeatValue)\n    }\n  static decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'array'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n   export class SafeUrl {\n    constructor(private domSanitizer: DomSanitizer) {}\n    transform(input) {\n      return this.domSanitizer.bypassSecurityTrustResourceUrl(input)\n    }\n  static decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'safeUrl'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomSanitizer, },\n];\n}\n\n   export class SafeStyle {\n    constructor(private domSanitizer: DomSanitizer) {}\n    transform(input) {\n      return this.domSanitizer.bypassSecurityTrustStyle(input)\n    }\n  static decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'safeStyle'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomSanitizer, },\n];\n}\n/* end: only this file */\n\n//use with bypassSecurityTrustResourceUrl for href\n export class TextDownload {\n  transform(input:string){return pipes.textDownload(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'textDownload'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class MarkdownAnchor {\n  transform(input:string){return pipes.markdownAnchor(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'markdownAnchor'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Capitalize {\n  transform(input:any){return pipes.capitalize(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'capitalize'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class CapitalizeWords {\n  transform(input:any){return pipes.capitalizeWords(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'capitalizeWords'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Yesno {\n  transform(input:any){return pipes.yesno(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'yesno'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class YesNo {\n  transform(input:any){return pipes.yesNo(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'YesNo'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Numbers {\n  transform(input:any){return pipes.numbers(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'numbers'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class ADate {\n  transform(){return pipes.aDate.apply(pipes.aDate, arguments)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'aDate'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class ATime {\n  transform(){return pipes.aTime.apply(pipes.aTime, arguments)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'aTime'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Ack {\n  transform(){return pipes.ack.apply(pipes.ack, arguments)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'ack'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Keys {\n  transform(input:any){\n    return input ? Object.keys(input) : []\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'keys'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class TypeofPipe {\n  transform(input:any){return typeof(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'typeof'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class ConsolePipe {\n  transform(){return console.log.apply(console,arguments)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'console'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nexport const declarations = [\n  Stringify,\n  ForceArray,\n  SafeUrl,\n  SafeStyle,\n  TextDownload,\n  MarkdownAnchor,\n  Capitalize,\n  CapitalizeWords,\n  Yesno,\n  YesNo,\n  Numbers,\n  Keys,\n  TypeofPipe,\n  ConsolePipe,\n  ADate,\n  ATime,\n  Ack\n]\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}