{"version":3,"sources":["../src/AckApi.ts"],"names":[],"mappings":"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","file":"AckApi.js","sourceRoot":"","sourcesContent":["import 'rxjs/add/operator/toPromise';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Request } from '@angular/http';\nimport { AckCache } from './AckCache';\nimport { AckQue } from './AckQue';\n\n/** Http util with offline config for request failures */\n export class AckApi{\n  public AckCache\n  public AckQue\n  public config = {\n    method:'GET',\n    baseUrl:'',\n    $http:{\n      headers:{}\n    }\n  }\n\n  constructor(\n    public http: Http\n    //,public AckCache:AckCache\n    //,public AckQue:AckQue\n  ){\n    this.AckCache = new AckCache()\n    this.AckQue = new AckQue()\n  }\n\n  /** START HERE. Handlers must be registered before sending requests\n    @options{maxTry:50}\n  */\n  registerHandler(name, handler?, options?){\n    options = options || {maxTry:50}\n    handler = handler || (config=>{\n      return this.request(config)\n    })\n    this.AckQue.registerHandler(name, handler)\n    return this\n  }\n\n  getQue(name){\n    return this.AckQue.get(name)\n  }\n\n  getCache(name){\n    return this.AckCache.get(name)\n  }\n\n  /** when back online, run this function */\n  processQue(name){\n    this.AckQue.paramHandler(name,config=>this._fetch(config))\n    return this.AckQue.processQue(name)\n  }\n\n  /** clears POST/PUT/PATCH/DELETE que */\n  clearQue(name){\n    return this.AckQue.clear(name)\n    //.then( ()=>this.AckCache.clear(name) )\n  }\n\n  /** clears GET cache */\n  clearCache(name){\n    return this.AckCache.clear(name)\n  }\n\n  /** method all request transactions tunnel thru to instead try for cache first\n    @config - {\n      url:string\n      method:string - GET,POST,DELETE,PUT\n      queModel:{\n        name, maxTry:50, expires||maxAge, allowExpired\n      }\n    }\n\n    HINT: @config.queModel, when defined:\n      - POST/PUT/PATCH requests goto que if they fail.\n      - GET responses are cached with optional expires or maxAge option\n  */\n  request(config) {\n    const defaults = {\n      method:'GET',\n      //url:this.config.baseUrl+config.url,\n      headers:{},\n      timeout: 6500//4000//8000\n    }\n\n    const request = Object.assign(defaults, (config||{}))\n    request.url = this.config.baseUrl + request.url\n\n    Object.assign(request.headers, this.config.$http.headers)//enforced config/defaults\n\n    //has cache instructions?\n    if(request.queModel){\n      return this.requestQueModel(request)\n    }\n\n    return this._fetch(request)\n  }\n\n  getCacheByNamedRequest(request){\n    return this.AckCache.get(request.queModel.name)\n    .then(routes=>{\n      routes = routes || {}\n      return routes[request.url]\n    })\n    .then(cache=>this.processCacheGet(cache,request))\n  }\n\n  requestQueModel(request){\n    if(request.queModel && request.queModel.constructor==String){\n      request.queModel = { name:request.queModel }\n    }\n\n    if (request.method === \"GET\") {\n      return this.getCacheByNamedRequest(request)\n    }\n\n    this.AckQue.paramHandler(request.queModel.name,config=>this._fetch(config))\n\n    //request is a PUT, POST, PATCH, or DELETE\n    return this._fetch(request)\n    //if fail, save config for later\n    .catch( e=>this.postRequestFail(e,request) )\n  }\n\n  processCacheGet(cache,cfg){\n    if(cache==null)return this._fetch(cfg)\n\n    return this.AckCache.cacheToReturn(cfg.queModel.name,cache,cfg.queModel)\n    .then(rtn=>{\n      const willExpire = rtn && this.AckCache.optionsKillCache(cfg.queModel)\n\n      if(!willExpire){\n        console.log('AckApi fetched cache that will never expire. Set queModel.expires=0 or queModel.maxAge=0 to avoid this message')\n      }\n\n      if(rtn!=null){\n        return rtn\n      }\n\n      return this._fetch(cfg)\n    })\n  }\n\n  postRequestFail(e,request){\n    const saveWorthy = e.status == 0 || e.status == -1 || e.status == 503\n\n    if(!saveWorthy)return Promise.reject(e)\n\n    request.offlineMeta = request.offlineMeta || {}\n    request.offlineMeta.offlineId = Date.now()\n    request.offlineMeta.lastAttempt = new Date()\n    request.offlineMeta.attempts = request.offlineMeta.attempts==null ? 1 : ++request.offlineMeta.attempts\n    request.offlineMeta.maxTry = request.offlineMeta.maxTry || 50\n    const tryAgainLater = request.offlineMeta.maxTry && request.offlineMeta.attempts <= request.offlineMeta.maxTry\n\n    e.offlineMeta = request.offlineMeta\n\n    if(tryAgainLater){\n      const requestSave = Object.assign({}, request)\n      delete requestSave.queModel//only used for GET method\n      return this.AckQue.set(request.queModel.name, requestSave)\n      .then( ()=>Promise.reject(e) )\n    }\n\n    return Promise.reject(e)\n  }\n\n  /** master method for sending requests and caching responses using $http requests\n    @cfg{\n      catch:'data'//typically only error data is returned, but if catch!='data' then entire response is returned for a caught error\n      promise:'data'//typically only data is returned, but if promise!='data' then entire response is returned\n      headers:{}//when sending a file 'Content-Type':undefined so that no content-type header is sent\n    }\n  */\n  _fetch(cfg) {\n    upgradeConfig(cfg)\n\n    const request = new Request(cfg)//cfg\n\n    return this.http.request( request )\n    .toPromise()\n    .then( response=>this.processFetchByConfig(response,cfg) )\n    .catch( e=>this.httpFailByConfig(e,cfg) )\n  }\n\n  processFetchByConfig(response, request){\n    const data = response['_body']//response['data'] || \n    const isJson = data && response.headers.get('Content-Type')=='application/json'\n\n    if(isJson && !response['data']){\n      try{\n        response['data'] = JSON.parse( data )\n      }catch(e){}\n    }\n\n    const isDataMode = !request.promise || request.promise=='data'\n    const output = isDataMode ? (response['data']||data) : response\n\n    if (request.method === \"GET\" && request.queModel) {\n      return this.requestResponseToCache(request, output)\n      .then( ()=>output )\n    }\n\n    return output\n  }\n\n  httpFailByConfig(e,cfg){\n    const isReduceData = cfg.catch==null||cfg.catch=='data'\n    const isCatchData = isReduceData && e.data && e.data.error\n\n    //find JSON error object and reduce to\n    if(isCatchData){\n      const newError = new Error()\n      Object.assign(newError, e.data.error)\n      e = newError\n    }\n\n    return Promise.reject(e)\n  }\n\n  requestResponseToCache(request, output){\n    const cachename = request.queModel.name || request.queModel\n    return this.AckCache.get(cachename)\n    .then(routes=>{\n      routes = routes || {}\n      routes[ request.url ] = {cache:output}\n      this.AckCache.dataOptionsCache(routes[ request.url ], request.queModel, output)\n      return routes\n    })\n    .then(routes=>this.AckCache.set(cachename, routes))\n  }\n  \n  /**\n    @path:url\n    @config:{\n      params:{}//url parameters\n    }\n  */\n  get(path, config?) {\n    const cfg = Object.assign({}, config)\n    cfg.method = \"GET\"\n    cfg.url = path\n    return this.request( cfg )\n  }\n\n  post(path, data, config?) {\n    const cfg = Object.assign({}, config)\n    cfg.method = \"POST\"\n    //cfg.data = data\n    cfg.body = data\n    cfg.url = path\n    return this.request( cfg )\n  }\n\n  delete(path, config?) {\n    const cfg = Object.assign({}, config)\n    cfg.method = \"DELETE\"\n    cfg.url = path\n    return this.request( cfg )\n  }\n\n  put(path, data, config?) {\n    const cfg = Object.assign({}, config)\n    cfg.method = \"PUT\"\n    //cfg.data = data\n    cfg.body = data\n    cfg.url = path\n    return this.request( cfg )\n  }\n\n  /** all process ques with be run with navigator.onLine */\n  /*monitorOnlineStatus(){\n    const onOnline = ()=>{\n      this.AckQue.processAllQues()\n    }\n\n    window.addEventListener(\"online\", onOnline)\n  }*/\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\n\n/** prevent angular1 from assuming the header to send is application/json */\nfunction upgradeConfig(cfg){\n  cfg.method = cfg.method || 'GET'\n\n  const isFormData = cfg.data && FormData && cfg.data.constructor==FormData\n  if(isFormData){\n    const preventAutoContentType =  !cfg.headers || Object.keys(cfg.headers).filter(h=>h.search(/content-type/i)<0)\n    \n    if(preventAutoContentType){\n      cfg.headers['Content-Type'] = undefined//'multipart/form-data;'\n    }\n  }\n\n  return cfg\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}