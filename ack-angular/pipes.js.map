{"version":3,"sources":["../src/pipes.ts"],"names":[],"mappings":"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","file":"pipes.js","sourceRoot":"","sourcesContent":["import { Pipe } from '@angular/core';\nimport { pipes } from \"./pipes.class\"\n\n export class MarkdownAnchor {\n  transform(input:string){return pipes.markdownAnchor(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'markdownAnchor'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Capitalize {\n  transform(input:any){return pipes.capitalize(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'capitalize'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class CapitalizeWords {\n  transform(input:any){return pipes.capitalizeWords(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'capitalizeWords'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Yesno {\n  transform(input:any){return pipes.yesno(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'yesno'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class YesNo {\n  transform(input:any){return pipes.yesNo(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'YesNo'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Numbers {\n  transform(input:any){return pipes.numbers(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'numbers'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class ADate {\n  transform(){return pipes.aDate.apply(pipes.aDate, arguments)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'aDate'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class ATime {\n  transform(){return pipes.aTime.apply(pipes.aTime, arguments)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'aTime'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Ack {\n  transform(){return pipes.ack.apply(pipes.ack, arguments)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'ack'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Keys {\n  transform(input:any){\n    if(input)return Object.keys(input)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'keys'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class TypeofPipe {\n  transform(input:any){return typeof(input)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'typeof'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class ConsolePipe {\n  transform(){return console.log.apply(console,arguments)}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'console'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nexport const declarations = [\n  MarkdownAnchor,\n  Capitalize,\n  CapitalizeWords,\n  Yesno,\n  YesNo,\n  Numbers,\n  Keys,\n  TypeofPipe,\n  ConsolePipe,\n  ADate,\n  ATime,\n  Ack\n]\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}