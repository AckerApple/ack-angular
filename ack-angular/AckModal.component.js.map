{"version":3,"sources":["../src/AckModal.component.ts"],"names":[],"mappings":";;AAAA,sCAOO;AAEP,iCAAwB;AACxB,2DAAmC;AAElC;IAgBC,kBAAmB,OAAkB;QAArC,iBAGC;QAHkB,YAAO,GAAP,OAAO,CAAW;QAfrC,kBAAa,GAAG,KAAK,CAAA;QACpB,YAAO,GAAG,IAAI,mBAAY,EAAE,CAAA;QAI5B,eAAU,GAAG,IAAI,CAAA;QAEjB,0BAAqB,GAAG,IAAI,mBAAY,EAAE,CAAA;QAG1C,cAAS,GAAG,IAAI,mBAAY,EAAE,CAAA;QAG9B,oBAAe,GAAG,IAAI,mBAAY,EAAE,CAAA;QAGnC,6DAA6D;QAC7D,UAAU,CAAC,cAAI,OAAA,KAAI,CAAC,mBAAmB,EAAE,EAA1B,CAA0B,EAAE,GAAG,CAAC,CAAA;IACjD,CAAC;IAED,sCAAmB,GAAnB;QAAA,iBAaC;QAZC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAA,KAAK;YACxD,EAAE,CAAA,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC;gBAAA,MAAM,CAAC,KAAK,CAAA;YAEhC,IAAM,IAAI,GAAG,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,MAAM,CAAA;YAChE,IAAM,aAAa,GAAG,IAAI,IAAI,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;YAElI,EAAE,CAAA,CAAE,aAAc,CAAC,CAAA,CAAC;gBAClB,KAAI,CAAC,KAAK,EAAE,CAAA;YACd,CAAC;YAED,MAAM,CAAC,IAAI,CAAA;QACb,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,2BAAQ,GAAR;QAAA,iBAaC;QAZC,UAAU,CAAC;YACT,KAAI,CAAC,SAAS,CAAC,IAAI,CAAE,KAAI,CAAE,CAAA;YAE3B,EAAE,CAAA,CAAC,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA,CAAC;gBACxC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAA;gBACzB,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,GAAG,IAAI,GAAG,KAAK,CAAA;gBAC9C,KAAI,CAAC,eAAe,CAAC,IAAI,CAAE,KAAI,CAAC,SAAS,CAAE,CAAA;YAC7C,CAAC;YAED,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,IAAI,wBAAwB,CAAA;YACvE,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC,CAAA;QACvD,CAAC,EAAE,CAAC,CAAC,CAAA;IACP,CAAC;IAED,wBAAK,GAAL;QACE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,IAAI,CAAC,SAAS,GAAC,KAAK,CAAE,CAAA;QACjD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IACzB,CAAC;IACI,mBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAC,WAAW;oBACpB,QAAQ,EAAC,sBAAQ;oBACjB,UAAU,EAAC,eAAO;iBACnB,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,uBAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAU,GAAG;KACnB,EAF6F,CAE7F,CAAC;IACK,uBAAc,GAA2C;QAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QAC9B,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC/B,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QACnC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAChC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QACrC,uBAAuB,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QAC5C,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QACzB,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QAChC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC/B,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;KACrC,CAAC;IACF,eAAC;CA9EA,AA8EA,IAAA;AA9Ea,4BAAQ","file":"AckModal.component.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef\n} from \"@angular/core\"\n\nimport { fxArray } from \"./prefx\"\nimport { string as ackModal } from \"./templates/ack-modal.pug\"\n\n export class AckModal{\n  showModelMode = false\n   onClose = new EventEmitter()\n  //@Input() size:string//'full' or null\n   wrapStyle\n   wrapCellStyle\n   allowClose = true\n   backgroundColor\n   backgroundColorChange = new EventEmitter()\n  \n   ref\n   refChange = new EventEmitter()\n  \n   showModel\n   showModelChange = new EventEmitter()\n\n  constructor(public element:ElementRef){\n    //after possible double click, close on outside content click\n    setTimeout(()=>this.clickListenForClose(), 400)\n  }\n\n  clickListenForClose(){\n    this.element.nativeElement.addEventListener('click', event=>{\n      if(!this.allowClose)return false\n\n      const eTar = event.srcElement || event.toElement || event.target\n      const isDirectChild = eTar == this.element.nativeElement.children[0] || eTar == this.element.nativeElement.children[0].children[0]\n      \n      if( isDirectChild ){\n        this.close()\n      }\n\n      return true\n    })\n  }\n\n  ngOnInit(){\n    setTimeout(()=>{\n      this.refChange.emit( this )\n\n      if(this.showModelChange.observers.length){\n        this.showModelMode = true\n        this.showModel = this.showModel ? true : false\n        this.showModelChange.emit( this.showModel )\n      }\n\n      this.backgroundColor = this.backgroundColor || 'rgba(255,255,255,0.95)'\n      this.backgroundColorChange.emit(this.backgroundColor)\n    }, 0)\n  }\n\n  close(){\n    this.showModelChange.emit( this.showModel=false )\n    this.onClose.emit(this)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector:'ack-modal',\n  template:ackModal,\n  animations:fxArray\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onClose': [{ type: Output },],\n'wrapStyle': [{ type: Input },],\n'wrapCellStyle': [{ type: Input },],\n'allowClose': [{ type: Input },],\n'backgroundColor': [{ type: Input },],\n'backgroundColorChange': [{ type: Output },],\n'ref': [{ type: Input },],\n'refChange': [{ type: Output },],\n'showModel': [{ type: Input },],\n'showModelChange': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}