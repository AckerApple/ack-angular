{"version":3,"sources":["../src/RouteReporter.component.ts"],"names":[],"mappings":"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","file":"RouteReporter.component.js","sourceRoot":"","sourcesContent":["//import { TransitionService } from \"ui-router-ng2\";\nimport { Directive, Input, Output, EventEmitter } from \"@angular/core\"\nimport { RouteWatchReporter } from \"./RouteWatchReporter\"\nimport { NavigationStart, NavigationEnd } from '@angular/router';\n\n export class RouteReporter{\n  $document\n  $scope\n  static parameters = [[\n    RouteWatchReporter\n  ]]\n  docCallbacks\n  //isBackButton\n  //isNotBackButton\n  //mouseover\n\n   stateChanger = new EventEmitter()\n   beforeChanger = new EventEmitter()\n   onLoad\n   ref//variable reference\n   refChange = new EventEmitter()\n\n   stateName\n   stateNameChange = new EventEmitter()\n\n   params\n   paramsChange = new EventEmitter()\n  \n  constructor(public RouteWatchReporter:RouteWatchReporter){\n    this.$document = document\n    this.docCallbacks = RouteWatchReporter.getDocumentCallbacks()\n\n    RouteWatchReporter.router.events.subscribe(event=>{\n      //if(event.constructor == NavigationStart){}\n      if(event.constructor == NavigationEnd){\n        this.beforeChanger.emit( this.RouteWatchReporter )\n\n        //allow one process to occur before reporting state has changed\n        setTimeout(()=>this.emit(), 0)\n      }\n    })\n\n    RouteWatchReporter.watchDocByCallbacks(this.$document, this.docCallbacks)\n  }\n\n  ngOnDestroy(){\n    this.RouteWatchReporter.unwatchDocByCallbacks(this.$document, this.docCallbacks)\n  }\n\n  emit(){\n    this.stateChanger.emit( this.RouteWatchReporter )\n \n    if( this.RouteWatchReporter.current ){\n      if( this.RouteWatchReporter.current.config ){\n        const name = this.RouteWatchReporter.current.config.name || this.RouteWatchReporter.current.config.path\n        this.stateNameChange.emit( this.stateName=name )\n      }\n\n      this.paramsChange.emit( this.params=this.RouteWatchReporter.current.params )\n    }\n  }\n\n  ngOnInit(){\n    setTimeout(()=>{\n      this.ref = this.RouteWatchReporter\n      this.refChange.emit(this.ref)\n      this.emit()\n    }, 0)\n\n    if(this.onLoad){\n      this.onLoad({\n        state:this.RouteWatchReporter.current,\n        params:this.RouteWatchReporter.current.params,\n        current:this.RouteWatchReporter.current\n      })\n    }\n\n  }\n\n  goBackTo(name, params){\n    this.RouteWatchReporter.goBackTo(name, params)\n  }\n\n  tryBack(name, params){\n    this.RouteWatchReporter.tryBack(name, params)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  //inputs:['ref'],\n  selector: 'route-reporter'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RouteWatchReporter, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'stateChanger': [{ type: Output, args: [\"onChange\", ] },],\n'beforeChanger': [{ type: Output, args: [\"beforeChange\", ] },],\n'onLoad': [{ type: Input },],\n'ref': [{ type: Input },],\n'refChange': [{ type: Output },],\n'stateName': [{ type: Input },],\n'stateNameChange': [{ type: Output },],\n'params': [{ type: Input },],\n'paramsChange': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}