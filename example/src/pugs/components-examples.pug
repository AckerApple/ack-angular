.pad-h
  p.margin-bottom-0 Import Example
  .pad-h.text-warning.text-xs
    |The following import code, is NOT needed if you used the AckModule import #[a.text-calm(href="#/overview" "(click)"="scrollToModuleImport()") seen here]
  pre.code-sample(ngNonBindable).
    import &#123; declarations as ackDecs &#125; from "ack-angular/components"
    import &#123; NgModule &#125; from '@angular/core';

    @NgModule(&#123;
      declarations:ackDecs
    &#125;)

br

h4.margin-bottom-0 Table of Contents
ul
  li
    a(href="#Tags" pageScroll) Tags
  li
    a(href="#Expression Binds" pageScroll) Expression Binds
  li
    a(href="#One Way Binds" pageScroll) One Way Binds
  li
    a(href="#Two Way Binds" pageScroll) Two Way Binds
  li
    a(href="#Layout Components" pageScroll) Layout Components
  li
    a(href="#Complex Components" pageScroll) Complex Components

br

h3.margin-bottom-0(id="Tags") Tags
.flex-wrap.child-margin-xxs
  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      div("(screenScroll)"="screenScrollCount=screenScrollCount+1")
      .pad-h
        h3 ack-array
        .text-grey-2x
          |Common array functionality available at a template level
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewAckArray=!viewAckArray" "[ngClass]"="viewAckArray?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewAckArray" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Bind Documentation
      ul
        li [(array)] - main array to stem functionality from
        li [idKey] - pointer to each array node id field
        li ([ref]) - pointer to AckArray class
        li [pageAt] - what number to break array into page buckets
        li ([pages]) - buckets of arrays based on pageAt

      h4.pad-sm.margin-0 API Documentation
      ul
        li toggle(item) - adds or removes item based on existence
        li push(item) - param and append item to array
        li unshift(item) - param and prepend item to array
        li splice(item) - remove item by index from array
        li param() - ensure array exists
        li only(item) - reduce array down to only item argument

      .pad-sm
        h4.margin-0 Usage Example: Toggle Items
        .text-grey-2x Take an arbitrary array (arrayOfObjects in demo) and allow a system of toggling selections
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;ack-array [(ref)]="Array" [(array)]="selectedArray" idKey="letter"&gt;&lt;/ack-array&gt;
          &lt;ng-container *ngIf="Array&gt;
            &lt;div *ngFor="let item of arrayOfObjects"&gt;
              &lt;input type="checkbox" [checked]="Array.selected(item)" (click)="Array.toggle(item)" /&gt;
              &nbsp;&nbsp;{{ item | json }}
            &lt;/div&gt;
          &lt;/ng-container&gt;

        .pad-sm
          h4.margin-0 Usage Example: Map Items
          .text-grey-2x Take an arbitrary array and create an object map
        absolute-overflow-x
          pre.code-sample.margin-0(ngNonBindable).
            &lt;ack-array [(ref)]="Array" [(array)]="selectedArray" idKey="letter" "[(keyMap)]"="objectOfArrays"&gt;&lt;/ack-array&gt;
            &lt;pre&gt;
              {{ objectOfArrays | json}}
            &lt;/pre&gt;

      .pad-sm
        h4.margin-0 Usage Example: Pages of Array
        .text-grey-2x Break array into buckets of results
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;ack-array [(ref)]="Array" [(array)]="largeArray" pageAt="20"&gt;&lt;/ack-array&gt;
          &lt;ng-container *ngIf="Array&gt;
            Total Pages : {{ Array.pages.length }}
            &lt;div *ngFor="let page of Array.pages;let page=index"&gt;
              Page {{page}} = {{ item | json }}
            &lt;/div&gt;
          &lt;/ng-container&gt;

      .pad-sm
        h4.margin-0 Demo Example
        .text-grey-2x A full featured example using a combination of techiniques
      
      -attrs = {};
      -attrs["[(ref)]"] = "Array"
      -attrs["[(array)]"] = "selectedArray"
      -attrs.idKey = "letter"
      -attrs["[(pageAt)]"] = "pageAt"
      -attrs["[(pages)]"] = "arrayPages"
      -attrs["[(keyMap)]"] = "arrayMap"
      ack-array&attributes(attrs)

      h5.pad-sm.margin-0 Example Array Adjusters
      .flex-wrap.child-margin-xs
        div(*ngFor="let item of arrayOfObjects;let i=index")
          -attrs = {};
          -attrs.type = "checkbox"
          -attrs["[checked]"] = "Array?.selected(item)"
          -attrs["(click)"] = "Array.toggle(item)"
          -attrs.name = "ackArray"
          -attrs.id = "ackArray{{i}}"
          input&attributes(attrs)
          |&nbsp;{{ item | json }}
        div
          |pageAt:
          select("[(ngModel)]"="pageAt")
            option(*ngFor="let page of [0,1,2,4,6,8]" "[value]"="page") {{page}}
      
      //-just show the array we are working with
      h5.pad-sm.margin-0 Example Selected Array
      absolute-overflow-x
        pre.code-sample.margin-0.
          {{ selectedArray | json }}
      
      //-prove array to map works
      h5.pad-sm.margin-0 Example Selected Map
      absolute-overflow-x
        pre.code-sample.margin-0.
          {{ arrayMap | json }}

      //- proces paging works
      .flex-wrap
        absolute-overflow-x.flex-1(*ngFor="let page of arrayPages;let x=index")
          h5.margin-0 Example Array.pages[{{ x+1 }}]
          pre.code-sample.margin-0.
            {{ page | json }}

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 ack-options
        .text-grey-2x.max-width-400
          |Array of choosable options tied to a model
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewAckOptions=!viewAckOptions" "[ngClass]"="viewAckOptions?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewAckOptions" "[@500]"="'fadeInUp'")
      .pad-sm
        h4.margin-0 Demo
        p.text-grey-3x.text-sm
          |Each item in list the below is selectable
        div(*ngIf="ackOptionString" "[@500]"="'fadeInUp'")
          strong Selected Option:
          |&nbsp;{{ ackOptionString }}
        ack-options("[array]"="['x','y','z']" "[(model)]"="ackOptionString" toggleable=1)
        hr
        strong Multiple Example
        div(*ngIf="ackOptionArray?.length" "[@500]"="'fadeInUp'")
          div
            strong Selected Options:
          absolute-overflow-x
            pre.code-sample {{ ackOptionArray | json }}
        ack-options("[array]"="[{name:'x'},{name:'y'},{name:'z'}]" "[(model)]"="ackOptionArray" multiple=1)
          ng-template(let-item="item")
            div &bull; name:{{ item.name }}
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div *ngIf="ackOptionString"&gt;
            &lt;strong&gt; Selected Option: &lt;/strong&gt;
            &#123;&#123; ackOptionString &#125;&#125;
          &lt;/div&gt;
          &lt;ack-options [array]="['x','y','z']" [(model)]="ackOptionString" toggleable&gt;&lt;/ack-options&gt;
          
          &lt;hr /&gt;
          
          &lt;div *ngIf="ackOptionArray?.length"&gt;
            &lt;strong&gt; Selected Options: &lt;/strong&gt;
            &lt;pre&gt; &#123;&#123; ackOptionArray | json &#125;&#125; &lt;/pre&gt;
          &lt;/div&gt;
          &lt;ack-options [array]="[&#123;name:'x'&#125;,&#123;name:'y'&#125;,&#123;name:'z'&#125;]" [(model)]="ackOptionArray" multiple&gt;
            &lt;ng-template let-item="item"&gt;
              &lt;div&gt; &amp;bull; name:&#123;&#123; item.name &#125;&#125; &lt;/div&gt;
            &lt;/ng-template&gt;
          &lt;/ack-options&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 ack-modal
        .text-grey-2x.max-width-400
          |Open simple dialog modal
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewAckModal=!viewAckModal" "[ngClass]"="viewAckModal?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewAckModal" "[@500]"="'fadeInUp'")
      ack-modal("*ngIf"="showAckModal" "(onClose)"="showAckModal=false" "[(backgroundColor)]"="modalBackgroundColor" "[(wrapStyle)]"="modalWrapStyle")
        .bg-white.border.border-grey-4x.pad-4x.radius-5
          |Sample Modal Dialog Window
          .text-xs.text-grey-2x.pad-h
            |*ngIf driven modal with animation provided by ack-angular-fx [@500]="'fadeInUp'"
      ack-modal("[(showModel)]"="showAckModalModel" "[(backgroundColor)]"="modalBackgroundColor" "[(wrapStyle)]"="modalWrapStyle")
        .bg-white.border.border-grey-4x.pad-4x.radius-5
          |Sample Modal Dialog Window
          .text-xs.text-grey-2x.pad-h
            |model driven modal with animation provided by ack-angular-fx [@500]="'fadeInUp'"

      .pad.text-center.flex-wrap.child-margin-xxs
        button.text-lg((click)="showAckModal=1") show modal
        button.text-lg((click)="showAckModalModel=1") show modal by model
        .flex-1.flex-valign-center
          .height-30.pad-h-sm.bg-grey-5x.border.border-grey-4x.border-right-0
            |bg
          input.height-30.flex-1("[(ngModel)]"="modalBackgroundColor")
        .flex-1.flex-valign-center
          .height-30.pad-h-sm.bg-grey-5x.border.border-grey-4x.border-right-0
            |width
          input.height-30.flex-1("(change)"="setModalWrapStyle($event.target.value)" placeholder="default width is content")

      .pad-sm
        h4 Properties
        ul
          li onClose
          li wrapCellStyle
          li allowClose = true
          li backgroundColor
          li ref

      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;ack-modal *ngIf="showAckModal" (onClose)="showAckModal=false" backgroundColor="rgba(255,255,255,0.95)"&gt;
            &lt;div style="background-color:white;padding:1em;"&gt;
              Sample Modal Dialog Window
            &lt;/div&gt;
          &lt;/ack-model&gt;
          &lt;button (click)="showAckModal=1"&gt; show modal &lt;/button&gt;

      h4.pad-sm.margin-0 Model Usage Example
      .text-grey-3x.text-smx Control modal display by a variable model
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;ack-modal [(showModel)]="showAckModal" backgroundColor="rgba(255,255,255,0.95)"&gt;
            &lt;div style="background-color:white;padding:1em;"&gt;
              Sample Modal Dialog Window
            &lt;/div&gt;
          &lt;/ack-model&gt;
          &lt;button (click)="showAckModal=1"&gt; show modal &lt;/button&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 ack-options-modal
        .text-grey-2x.max-width-400
          |Array of choosable options, in a modal, tied to a model
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewAckOptionsModal=!viewAckOptionsModal" "[ngClass]"="viewAckOptionsModal?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewAckOptionsModal" "[@500]"="'fadeInUp'")
      .pad
        |The ack-options-modal component extends ack-options and implements ack-modal. All options in ack-modal are available in ack-options-modal.
      .pad-sm
        h4.margin-0 Demo
        p.text-grey-3x.text-sm
          |Each item in list the below is selectable
        div(*ngIf="ackOptionStringModal" "[@500]"="'fadeInUp'")
          strong Selected Option:
          |&nbsp;{{ ackOptionStringModal }}
        ack-options-modal(*ngIf="showAckOptionsStringModal" "[@500]"="'fadeInUp'" allowClose="0" "(onClose)"="showAckOptionsStringModal=0" "[array]"="['option 0','option 1','option 2']" "[(model)]"="ackOptionStringModal" toggleable="1")
          .pad-right-3x Select Something Below
        button("(click)"="showAckOptionsStringModal=!showAckOptionsStringModal") select option
        hr
        strong Multiple Example
        div(*ngIf="ackOptionArrayModal?.length" "[@500]"="'fadeInUp'")
          div
            strong Selected Options:
          absolute-overflow-x
            pre.code-sample {{ ackOptionArrayModal | json }}
        ack-options-modal(*ngIf="showAckOptionsObjectModal" "[@500]"="'fadeInUp'" "(onClose)"="showAckOptionsObjectModal=0" "[array]"="[{name:'red',key:'r'},{name:'blue',key:'b'},{name:'green',key:'g'}]" "[(model)]"="ackOptionArrayModal" multiple="1" arrayKey="key" arrayToModelKey="" modelKey="key")
          .pad-right-3x Select Multiple Things Below
          ng-template(let-item="item")
            div &bull; name:{{ item.name }}
        button("(click)"="showAckOptionsObjectModal=!showAckOptionsObjectModal") select options
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div *ngIf="ackOptionStringModal"&gt;
            &lt;strong&gt; Selected Option: &lt;/strong&gt;
            &#123;&#123; ackOptionStringModal &#125;&#125;
          &lt;/div&gt;
          &lt;ack-options-modal *ngIf="showAckOptionsStringModal" [@500]="'fadeInUp'" allowClose="0" (onClose)="showAckOptionsStringModal=0" [array]="['x','y','z']" [(model)]="ackOptionStringModal" toggleable&gt;&lt;/ack-options&gt;
            &lt;div style="padding-right:30px;"&gt;Select Something Below&lt;/div&gt;
          &lt;button (click)="showAckOptionsStringModal=!showAckOptionsStringModal") select option &lt;/button&gt;
          
          &lt;hr /&gt;
          
          &lt;div *ngIf="ackOptionArrayModal?.length"&gt;
            &lt;strong&gt; Selected Options: &lt;/strong&gt;
            &lt;pre&gt; &#123;&#123; ackOptionArrayModal | json &#125;&#125; &lt;/pre&gt;
          &lt;/div&gt;
          &lt;ack-options-modal *ngIf="showAckOptionsObjectModal" [@500]="'fadeInUp'" (onClose)="showAckOptionsObjectModal=0" [array]="[&#123;name:'red'&#125;,&#123;name:'blue'&#125;,&#123;name:'green'&#125;]" [(model)]="ackOptionArrayModal" multiple arrayKey="name" arrayToModelKey="key"&gt;
            &lt;div style="padding-right:30px;"&gt;Select Multiple Things Below&lt;/div&gt;
            &lt;ng-template let-item="item"&gt;
              &lt;div&gt; &amp;bull; name:&#123;&#123; item.name &#125;&#125; &lt;/div&gt;
            &lt;/ng-template&gt;
          &lt;/ack-options&gt;
          &lt;button (click)="showAckOptionsObjectModal=!showAckOptionsObjectModal") select options &lt;/button&gt;

br

h3.margin-bottom-0(id="Expression Binds") Expression Binds
.flex-wrap.child-margin-xxs
  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      div("(screenScroll)"="screenScrollCount=screenScrollCount+1")
      .pad-h
        h3 (screenScroll)
        .text-grey-2x
          |Run expression on screen scroll. Scroll Event Count :
          .inline-block.width-50 &nbsp;{{ screenScrollCount }}
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewScreenScroll=!viewScreenScroll" "[ngClass]"="viewScreenScroll?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewScreenScroll" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div (screenScroll)="screenScrollCount=screenScrollCount?1:++screenScrollCount" &gt;
          &nbsp;&nbsp;screenScroll count : {{ screenScrollCount }}
          &lt;/div&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 (onFormChanged)
        .text-grey-2x.max-width-400
          |Capture a form tag onchange event
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewOnFormChanged=!viewOnFormChanged" "[ngClass]"="viewOnFormChanged?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewOnFormChanged" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Example
      form.pad("(onFormChanged)"="formChanges=formChanges==null?1:formChanges+1")
        span Change Count : {{formChanges || 0}} :
        |&nbsp;
        input(type="radio" name="fcTest")
        |&nbsp;
        input(type="radio" name="fcTest")
        |&nbsp;
        input(type="radio" name="fcTest")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;form (onFormChanged)="formChanges=formChanges==null?1:formChanges+1" &gt;
            &lt;span&gt; Change Count : {{formChanges || 0}} &lt;/span&gt;
            &lt;input type="radio" name="fcTest" /&gt;
            &lt;input type="radio" name="fcTest" /&gt;
            &lt;input type="radio" name="fcTest" /&gt;
          &lt;/form&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 (onFormAlter)
        .text-grey-2x.max-width-400
          |Capture a form tag oninput event
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewOnFormAlter=!viewOnFormAlter" "[ngClass]"="viewOnFormAlter?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewOnFormAlter" "[@500]"="'fadeInUp'")
      .pad.text-info Fires for every form input alteration and NOT just after a change occurred
      h4.pad-sm.margin-0 Example
      form.pad("(onFormAlter)"="formAlters=formAlters==null?1:formAlters+1")
        span Alter Count : {{formAlters || 0}} :
        input(type="text")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;form (onFormAlter)="formAlters=formAlters==null?1:formAlters+1" &gt;
            &lt;span&gt; Alter Count : {{formAlters || 0}} &lt;/span&gt;
            &lt;input type="text" /&gt;
          &lt;/form&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 (onEnterKey)
        .text-grey-2x.max-width-400
          |Capture keyUp events when enter key used
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewOnEnterKey=!viewOnEnterKey" "[ngClass]"="viewOnEnterKey?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewOnEnterKey" "[@500]"="'fadeInUp'")
      .pad.text-info Fires for every onKeyUp event where enter key was pressed
      h4.pad-sm.margin-0 Example
      .flex.child-margin-xs.pad-xs
        span Enter Count : {{enterCountKey || 0}}
        input.flex-1(type="text" "(onEnterKey)"="enterCountKey=enterCountKey==null?1:enterCountKey+1" placeholder="type here and use enter key")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;span&gt; Enter Count : {{enterCountKey || 0}} &lt;/span&gt;
          &lt;input type="text" (onEnterKey)="enterCountKey=enterCountKey==null?1:enterCountKey+1" placeholder="type here and use enter key" /&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 (onEscapeKey)
        .text-grey-2x.max-width-400
          |Capture keyUp events when escape key used
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewOnEscapeKey=!viewOnEscapeKey" "[ngClass]"="viewOnEscapeKey?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewOnEscapeKey" "[@500]"="'fadeInUp'")
      .pad.text-info Fires for every onKeyUp event where enter key was pressed
      h4.pad-sm.margin-0 Example
      .flex.child-margin-xs.pad-xs
        span Escape Count : {{escapeCountKey || 0}}
        input.flex-1(type="text" "(onEscapeKey)"="escapeCountKey=escapeCountKey==null?1:escapeCountKey+1" placeholder="type here and use escape key")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;span&gt; Escape Count : {{escapeCountKey || 0}} &lt;/span&gt;
          &lt;input type="text" (onEscapeKey)="escapeCountKey=escapeCountKey==null?1:escapeCountKey+1" placeholder="type here and use escape key" /&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 (preventBackKey)
        .text-grey-2x.max-width-400
          |Prevent the use of the backspace key
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewPreventBackKey=!viewPreventBackKey" "[ngClass]"="viewPreventBackKey?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewPreventBackKey" "[@500]"="'fadeInUp'")
      .pad.text-info Prevents and fires every onKeyUp event where backspace key was pressed
      h4.pad-sm.margin-0 Example
      .flex.child-margin-xs.pad-xs
        span Backspace Count : {{backspaceCount || 0}}
        input.flex-1(type="text" "(preventBackKey)"="backspaceCount=backspaceCount==null?1:backspaceCount+1" placeholder="type here and use enter key")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;span&gt; Backspace Count : {{backspaceCount || 0}} &lt;/span&gt;
          &lt;input type="text" (preventBackKey)="backspaceCount=backspaceCount==null?1:backspaceCount+1" placeholder="type here and then use backspace key" /&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 (preventEnterKey)
        .text-grey-2x.max-width-400
          |Prevent the use of the enter keys
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewPreventEnterKey=!viewPreventEnterKey" "[ngClass]"="viewPreventEnterKey?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewPreventEnterKey" "[@500]"="'fadeInUp'")
      .pad.text-info Prevents and fires every onKeyUp event where enter key was pressed
      h4.pad-sm.margin-0 Example
      .flex.child-margin-xs.pad-xs
        span Enter Count : {{preventEnterCount || 0}}
        input.flex-1(type="text" "(preventEnterKey)"="preventEnterCount=preventEnterCount==null?1:preventEnterCount+1" placeholder="type here and use enter key")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;span&gt; Enter Count : {{preventEnterCount || 0}} &lt;/span&gt;
          &lt;input type="text" (preventEnterKey)="preventEnterCount=preventEnterCount==null?1:preventEnterCount+1" placeholder="type here and use enter key" /&gt;

br

h3.margin-bottom-0(id="One Way Binds") One Way Binds
.flex-wrap.child-margin-xxs
  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 [var]
        .text-grey-2x.max-width-400
          |Create local template variables
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewVar=!viewVar" "[ngClass]"="viewVar?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewVar" "[@500]"="'fadeInUp'")
      .pad-sm
        h4.margin-0 Demo
        p.text-grey-3x.text-sm
          |Each item in list below, has a localized variable
        .flex-wrap.child-margin-xxs(#myVar="var" "[var]"="0")
          button("(click)"="myVar.var=myVar.var+1") outsize memory {{ myVar.var }}
          button(*ngFor="let i of [0,1,2,3]" "#myVar"="var" "[var]"="i" "(click)"="myVar.var=myVar.var+1")
            |click count + index {{ myVar.var }}

      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div #myVar="var" [var]="0"&gt;
            &lt;button (click)="myVar.var=myVar.var+1"&gt;
              outsize memory &#123;&#123;&#123; myVar.var &#125;&#125;
            &lt;/button&gt;
            &lt;button *ngFor="let i of [0,1,2,3]" #myVar="var" [var]="i" (click)="myVar.var=myVar.var+1"&gt;
              click count + index &#123;&#123; myVar.var &#125;&#125;
            &lt;/button&gt;
          &lt;/div&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 [focusOn]
        .text-grey-2x.max-width-400
          |element focus on demand
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewFocusOn=!viewFocusOn" "[ngClass]"="viewFocusOn?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewFocusOn" "[@500]"="'fadeInUp'")
      .pad.text-center.flex-wrap.child-margin-xxs
        div
          button.text-lg((click)="focusOn=1") focus input
        .flex-1
          input.width-full.text-lg("[focusOn]"="focusOn" "(focusThen)"="focusOn=0" "[focusOnDelay]"="focusOnDelay" placeholder="focus target")
        div
          input.text-lg.width-100(type="number" "[(ngModel)]"="focusOnDelay" placeholder="delay")
          |ms

      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;button (click)="focusOn=1"&gt; focus input &lt;/button&gt;
          &lt;input [focusOn]="focusOn" (focusThen)="focusOn=0" [focusOnDelay]="focusOnDelay" placeholder="focus target" /&gt;
          &lt;input type="number" [(ngModel)]="focusOnDelay" placeholder="delay" /&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 [selectOn]
        .text-grey-2x.max-width-400
          |element select on demand
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewSelectOn=!viewSelectOn" "[ngClass]"="viewSelectOn?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewSelectOn" "[@500]"="'fadeInUp'")
      .pad.text-center.flex-wrap.child-margin-xxs
        div
          button.text-lg((click)="selectOn=1") select input
        .flex-1
          input.width-full.text-lg("[selectOn]"="selectOn" "(selectThen)"="selectOn=0" "[selectOnDelay]"="selectOnDelay" placeholder="select target" value="test to select")
        div
          input.text-lg.width-100(type="number" "[(ngModel)]"="selectOnDelay" placeholder="delay")
          |ms

      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;button (click)="selectOn=1"&gt; select input &lt;/button&gt;
          &lt;input [selectOn]="selectOn" (selectThen)="selectOn=0" [selectOnDelay]="selectOnDelay" placeholder="select target" value="test to select" /&gt;
          &lt;input type="number" [(ngModel)]="selectOnDelay" placeholder="delay" /&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 [shakeOn]
        .text-grey-2x.max-width-400
          |Control an animated shaking effect on demand
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewShakeOn=!viewShakeOn" "[ngClass]"="viewShakeOn?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewShakeOn" "[@500]"="'fadeInUp'")
      .pad
        .pad-xs.bg-warning.border-warning.text-warning.border
          |You will need to &lt;link&gt; one of two style sheets:
          ul
            li ack-angular/ack-angular.css
            li - or -
            li ack-angular/csshake.css
      h4.pad-h-sm.margin-0 Example
      .flex-wrap.child-pad-h-xs.pad-h
        div
          label.block &nbsp;
          label([shakeOn]="shakeOn" "(shakeThen)"="shakeOn=false" "[(shakeRef)]"="shakeRef" "[(shakeForMs)]"="shakeForMs" "[(shakeType)]"="shakeOnType" "[(shakeConstant)]"="shakeConstant")
            |shake this text
        .width-100
          label &nbsp;
          button.width-full("(click)"="shakeOn=!shakeOn") shake:{{shakeOn||false}}
        div
          label &nbsp;
          a.pad-h.border.border-positive.text-positive.block.text-center.hover-bg-positive.hover-text-white("(mouseover)"="shakeOn=true" "(mouseout)"="shakeOn=false")
            |hover me
        div
          label shakeType
          select.width-full("[(ngModel)]"="shakeOnType" "(change)"="shakeOn=true")
            option(*ngFor="let item of (shakeRef?shakeRef.shakeTypes:[])" value="{{item}}") {{item}}
        div
          label &nbsp;
          div
            input(type="checkbox" id="shakeConstant" "[(ngModel)]"="shakeConstant" "(change)"="shakeOn=$event.target.checked")
            |&nbsp;
            label(for="shakeConstant") shakeConstant
        div
          label shakeForMs
          div
            input.width-100("[(ngModel)]"="shakeForMs" "(change)"="shakeOn=true")

      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;label [shakeOn]="shakeOn" (shakeThen)="shakeOn=false" [(shakeRef)]="shakeRef" [(shakeForMs)]="shakeForMs" [(shakeType)]="shakeOnType"&gt;
            shake this text :: {{ shakeOn||false }}
          &lt;/label&gt;
          &lt;button (click)="shakeOn=true"&gt; shake:{{shakeOn||false}} &lt;/button&gt;
          &lt;a (mouseover)="shakeOn=true" (mouseout)="shakeOn=false"&gt;
            hover me
          &lt;/a&gt;
          &lt;select [(ngModel)]="shakeOnType" (change)="shakeOn=true"&gt;
            &lt;option *ngFor="let item of (shakeRef?shakeRef.shakeTypes:[])" value="{{item}}"&gt;{{item}}&lt;/option&gt;
          &lt;/select&gt;
          &lt;input type="checkbox" id="shakeConstant" [(ngModel)]="shakeConstant" (change)="shakeOn=$event.target.checked" /&gt;
          &lt;input [(ngModel)]="shakeForMs" (change)="shakeOn=true" /&gt;

br

h3.margin-bottom-0(id="Two Way Binds") Two Way Binds
.flex-wrap.child-margin-xxs
  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      div("[(statusOnlineModel)]"="statusOnlineModel")
      .pad-h
        h3 [(statusOnlineModel)]
        .text-grey-2x.max-width-400
          |Get browser window inner width. #[strong IS ONLINE] :
          .inline-block.width-50 &nbsp;{{ statusOnlineModel }}
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewStatusOnlineModel=!viewStatusOnlineModel" "[ngClass]"="viewStatusOnlineModel?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewStatusOnlineModel" "[@500]"="'fadeInUp'")
      .pad
        .pad.bg-warning.border-warning.border.text-warning
          |Completely turn off your internet and the online status will change.
          br
          |A delay is expected during transition from offline to online
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div("[(statusOnlineModel)]"="statusOnlineModel")&gt;
            |statusOnlineModel : {{ statusOnlineModel ? 'online' : 'offline'}}
          &lt;/div&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      div("[(statusOfflineModel)]"="statusOfflineModel")
      .pad-h
        h3 [(statusOfflineModel)]
        .text-grey-2x.max-width-400
          |Get browser window inner width. #[strong IS OFFLINE] :
          .inline-block.width-50 &nbsp;{{ statusOfflineModel }}
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewStatusOfflineModel=!viewStatusOfflineModel" "[ngClass]"="viewStatusOfflineModel?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewStatusOfflineModel" "[@500]"="'fadeInUp'")
      .pad
        .pad.bg-warning.border-warning.border.text-warning
        |Completely turn off your internet and the offline status will change
        br
        |A delay is expected during transition from offline to online
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div("[(statusOfflineModel)]"="statusOfflineModel")&gt;
            |statusOfflineModel : {{ statusOfflineModel ? 'offline' : 'online'}}
          &lt;/div&gt;

  .width-full
    .border.border-grey-4x.border.border-bottom-0
      div("[(screenScrollHeightDiff)]"="screenScrollHeightDiff")
      .pad-h
        h3 [(screenScrollHeightDiff)]
        .text-grey-2x
          |Model of how many pixels overflow past the screen height (screenHeight - scrollHeight).
          div
            |Currently :
            .inline-block.width-50 &nbsp;{{ screenScrollHeightDiff }}
          .pad.text-grey-3x.text-smx resize window height to see change
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewScreenScrollHeightDiff=!viewScreenScrollHeightDiff" "[ngClass]"="viewScreenScrollHeightDiff?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewScreenScrollHeightDiff" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div [(screenScrollHeightDiff)]="screenScrollHeightDiff" &gt;
          &nbsp;&nbsp;screenScrollHeightDiff : {{ screenScrollHeightDiff }}
          &lt;/div&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      div("[(screenScrollModelY)]"="screenScrollModelY")
      .pad-h
        h3 [(screenScrollModelY)]
        .text-grey-2x.max-width-400
          |Get browser window inner width. Currently :
          .inline-block.width-50 &nbsp;{{screenScrollModelY}}px
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewScreenScrollModelY=!viewScreenScrollModelY" "[ngClass]"="viewScreenScrollModelY?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewScreenScrollModelY" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div [(screenScrollModelY)]="screenScrollModelY" &gt;
          &nbsp;&nbsp;screenScrollModelY : {{ screenScrollModelY }}px
          &lt;/div&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      div("[(htmlWidthModel)]"="htmlWidthModel")
      .pad-h
        h3 [(htmlWidthModel)]
        .text-grey-2x
          |Get the browser document inner width. Currently : {{htmlWidthModel}}px
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewHtmlWidthModel=!viewHtmlWidthModel" "[ngClass]"="viewHtmlWidthModel?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewHtmlWidthModel" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div [(htmlWidthModel)]="htmlWidthModel"&gt;
          &nbsp;&nbsp;htmlWidthModel : {{ htmlWidthModel }}px
          &lt;/div&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      div("[(htmlHeightModel)]"="htmlHeightModel")
      .pad-h
        h3 [(htmlHeightModel)]
        .text-grey-2x
          |Get the browser document inner height. Currently : {{htmlHeightModel}}px
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewHtmlHeightModel=!viewHtmlHeightModel" "[ngClass]"="viewHtmlHeightModel?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewHtmlHeightModel" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div [(htmlHeightModel)]="htmlHeightModel"&gt;
          &nbsp;&nbsp;htmlHeightModel : {{ htmlHeightModel }}px
          &lt;/div&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      div("[(screenWidthModel)]"="screenWidthModel")
      .pad-h
        h3 [(screenWidthModel)]
        .text-grey-2x.max-width-400
          |Get the browser window inner width. Currently : {{screenWidthModel}}px
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewScreenWidthModel=!viewScreenWidthModel" "[ngClass]"="viewScreenWidthModel?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewScreenWidthModel" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div [(screenWidthModel)]="screenWidthModel"&gt;
          &nbsp;&nbsp;screenWidthModel : {{ screenWidthModel }}px
          &lt;/div&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      div("[(screenHeightModel)]"="screenHeightModel")
      .pad-h
        h3 [(screenHeightModel)]
        .text-grey-2x.max-width-400
          |Get the browser window inner height. Currently : {{screenHeightModel}}px
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewScreenHeightModel=!viewScreenHeightModel" "[ngClass]"="viewScreenHeightModel?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewScreenHeightModel" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div [(screenHeightModel)]="screenHeightModel"&gt;
          &nbsp;&nbsp;screenHeightModel : {{ screenHeightModel }}px
          &lt;/div&gt;

  .flex-1("[(elementSizeModel)]"="elementSizeModel")
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 [(elementSizeModel)]
        .text-grey-2x.max-width-400
          |Get an elements size. Currently : {{ elementSizeModel?.width }}x{{elementSizeModel?.height }}
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewElementSizeModel=!viewElementSizeModel" "[ngClass]"="viewElementSizeModel?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewElementSizeModel" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div [(elementSizeModel)]="elementSizeModel"&gt;
          &nbsp;&nbsp;elementSizeModel : {{ elementSizeModel?.width }}x{{ elementSizeModel?.height }}
          &lt;/div&gt;

  .flex-1("[(elementHeightModel)]"="elementHeightModel")
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 [(elementHeightModel)]
        .text-grey-2x.max-width-400
          |Get an elements height. Currently : {{elementHeightModel}}px
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewElementHeightModel=!viewElementHeightModel" "[ngClass]"="viewElementHeightModel?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewElementHeightModel" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div [(elementHeightModel)]="elementHeightModel"&gt;
          &nbsp;&nbsp;elementHeightModel : {{ elementHeightModel }}px
          &lt;/div&gt;

  .flex-1("[(elementWidthModel)]"="elementWidthModel")
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 [(elementWidthModel)]
        .text-grey-2x.max-width-400
          |Get an elements width. Currently : {{elementWidthModel}}px
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewElementWidthModel=!viewElementWidthModel" "[ngClass]"="viewElementWidthModel?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewElementWidthModel" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;div [(elementWidthModel)]="elementWidthModel"&gt;
          &nbsp;&nbsp;elementWidthModel : {{ elementWidthModel }}px
          &lt;/div&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 [(innerHtmlModel)]
        .text-grey-2x.max-width-400
          |Capture an elements innerHTML into a model
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewInnerHtmlModel=!viewInnerHtmlModel" "[ngClass]"="viewInnerHtmlModel?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewInnerHtmlModel" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Example
      div("[(innerHtmlModel)]"="innerHtmlModel")
        button("(click)"="contentArray.push('')") add content
        span(*ngFor="let item of contentArray")
          |&#10;
          button("(click)"="contentArray.push('')") add content
      absolute-overflow-x
        pre.code-sample.margin-0 {{ innerHtmlModel }}
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;span&gt; Enter Count : {{preventEnterCount || 0}} &lt;/span&gt;
          &lt;input type="text" (onEnterKey)="preventEnterCount=preventEnterCount==null?1:preventEnterCount+1" placeholder="type here and use enter key" /&gt;

br

h3.margin-bottom-0(id="Layout Components") Layout Components
.pad
  .pad.bg-warning.border-warning.text-warning.border
    |You will need to &lt;link&gt; one of two style sheets:
    ul
      li ack-angular/ack-angular.css
      li - or -
      li ack-angular/ack-css-boot.css
.flex-wrap.child-margin-xxs
  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 absolute-overflow-x
        .text-grey-2x.max-width-400
          |Control pre and nowrap elements x-axis overflow
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="absoluteOverflowX=!absoluteOverflowX" "[ngClass]"="absoluteOverflowX?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="absoluteOverflowX" "[@500]"="'fadeInUp'")
      .pad
        .pad.bg-info.text-info.text-info
          |Often, pre elements and nowrap styles, make it hard to contronl x-axis overflow.
          p The following component, uses a relative and a absolute position elements along with height monitoring to manage x-axis overflow.
          p A no-sroll-bar option is defaulted to remove overflow scroll bars.
      h4.pad-sm.margin-0 Example
      .pad
        absolute-overflow-x
          //-.pad-xs
            input(type="checkbox" "[(ngModel)]"="scrollBars" name="scrollBars")
            |&nbsp;scrollBars
          .nowrap &nbsp;&nbsp;This content all runs on one line flat out for as long as I can stand to stand typing at a Veridesk in Delray Beach, FL. Not that long it turns out...
          //-pre
            |&lt;pre&gt;
            |&nbsp;&nbsp;This PRE ELEMENT content all runs on one line flat out for as long as I can stand to stand typing at a Veridesk in Delray Beach, FL. Not that long it turns out...
            |&lt;/pre&gt;
        h4.pad-sm.margin-0 Usage Example
        absolute-overflow-x
          pre.code-sample.margin-0(ngNonBindable).
            &lt;absolute-overflow-x&gt;
            &nbsp;&nbsp;&lt;div style="white-space:nowrap;"&gt;
            &nbsp;&nbsp;&nbsp;&nbsp;This content all runs on one line flat out for as long as I can stand to stand typing at a Veridesk in Delray Beach, FL. Not that long it turns out...
            &nbsp;&nbsp;&lt;/div&gt;
            &lt;/absolute-overflow-x&gt;

  .flex-1
    .border.border-grey-4x.border.border-bottom-0
      .pad-h
        h3 error-well
        .text-grey-2x.max-width-400
          |a smart and simple place to display errors
        br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewErrorWell=!viewErrorWell" "[ngClass]"="viewErrorWell?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewErrorWell" "[@500]"="'fadeInUp'")
      h4.pad-sm.margin-0 Example
      .pad
        select(name="cssClasses" "[(ngModel)]"="cssClasses")
          option(value="bg-info border-info text-info") bg-info border-info text-info
          option(value="bg-warning border-warning text-warning") bg-warning border-warning text-warning
          option(value="bg-danger border-danger text-danger") bg-danger border-danger text-danger
          option(value="bg-energized border-energized text-energized") bg-energized border-energized text-energized
          option(value="bg-calm border-calm text-calm") bg-calm border-calm text-calm
          option(value="bg-assertive border-assertive text-assertive") bg-assertive border-assertive text-assertive
          option(value="bg-success border-success text-success") bg-success border-success text-success
          option(value="bg-positive border-positive text-positive") bg-positive border-positive text-positive
          option(value="bg-balanced border-balanced text-balanced") bg-balanced border-balanced text-balanced
          option(value="bg-stable border-stable text-stable") bg-stable border-stable text-stable
          option(value="bg-dark border-dark text-dark") bg-dark border-dark text-dark
          option(value="bg-royal border-royal text-royal") bg-royal border-royal text-royal
        error-well.margin("[error]"="error" "[cssClasses]"="cssClasses")
        button("(click)"="causeError()") cause error
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;error-well [error]="error"&gt;&lt;/error-well&gt;
          &lt;button("(click)"="causeError()") cause error &lt;/button&gt;

br
h3(id="Complex Components") Complex Components
.pad-h
  p.margin-bottom-0 Components that have additional dependencies or restrictions
.flex-wrap.child-margin-xxs
  .flex-1.border.border-grey-4x.border
    .pad-h
      h3 route-reporter
      .text-grey-2x.max-width-400
        |Get in tune with your document route states using @angular/router
      br
    .text-center
      a.block.border.pad-xxs.hover-bg-warning("(click)"="viewRouteReporter=!viewRouteReporter" "[ngClass]"="viewRouteReporter?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewRouteReporter" "[@500]"="'fadeInUp'")
      .pad Requirements
        ul
          li route-reporter
      route-reporter("[(ref)]"="routeState")
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;route-reporter [(ref)]="" (beforeChange)="" (onChange)=""&gt;
      h4.pad-sm.margin-0 ref example
      absolute-overflow-x
        pre.code-sample.margin-0
          div(ngNonBindable).
            &lt;route-reporter [(ref)]="routeState" &gt;
          div
            span(ngNonBindable) {{ routeState?.current.config.name }}
            span &nbsp;==&nbsp;
            span {{ routeState?.current.config.name }}
  //-.flex-1.border.border-grey-4x.border
    .pad-h
      h3 ui-route-reporter
      .text-grey-2x.max-width-400
        |Get in tune with your document route states using ui-router-ng2
      br
    .text-center
      .border.pad-xxs("(click)"="viewUiRouteReporter=!viewUiRouteReporter" "[ngClass]"="viewUiRouteReporter?'border-energized bg-energized':'border-info bg-info'")
        |view details
    .border.border-top-0.border-grey-4x.bg-stable(*ngIf="viewUiRouteReporter" "[@500]"="'fadeInUp'")
      .pad Requirements
        ul
          li ui-router-ng2
      h4.pad-sm.margin-0 Usage Example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;ui-route-reporter [(ref)]="" (beforeChange)="" (onChange)=""&gt;
      h4.pad-sm.margin-0 ref example
      absolute-overflow-x
        pre.code-sample.margin-0(ngNonBindable).
          &lt;ui-route-reporter [(ref)]="routeState" &gt;
          -----------------------------------------
          routeState:{{ routeState|json }}
