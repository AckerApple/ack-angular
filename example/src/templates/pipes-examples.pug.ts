export const string = "<h2 class=\"margin-top-0\">Pipes</h2><p class=\"text-sm text-grey-2x\">Decorate and filter output via Pipes</p><p class=\"margin-bottom-0\">Import Example</p><div class=\"pad-h text-warning text-xs\">The following import code, is NOT needed if you used the AckModule import <a class=\"text-calm\" href=\"#/overview\" (click)=\"scrollToModuleImport()\">seen here</a></div><pre class=\"code-sample\">import &#123; NgModule &#125; from '@angular/core'"+
"\nimport &#123; AppComponent &#125; from './SomeRandomComponent'"+
"\n"+
"\nimport * as ackPipes from 'ack-angular/pipes'"+
"\n"+
"\n@NgModule(&#123;"+
"\n  declarations : [ AppComponent, ...ackPipes.declarations ]"+
"\n&#125;) export class AppModule &#123;&#125;"+
"\n</pre><br/><h3 id=\"Documentation\">Documentation</h3><div class=\"flex-wrap child-margin-xxs\"><div class=\"flex3 border-grey-6x border width-full\"><div class=\"pad-h\"><h3>textDownload &amp; safeUrl</h3><p class=\"text-sm text-grey-2x\">Cast string to a data:text/plain uri</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.SafeUrl=!views.SafeUrl\" [ngClass]=\"views.SafeUrl?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.SafeUrl\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">&lt;a [href]=\"'Usage Examples' | textDownload | safeUrl\" download=\"download.txt\"&gt;"+
"\n  download"+
"\n&lt;/a&gt;</span><span class=\"pad-h\">== <a [href]=\"'Usage Examples' | textDownload | safeUrl\" download=\"download.txt\">download</a></span></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border width-full\"><div class=\"pad-h\"><h3>safeStyle</h3><p class=\"text-sm text-grey-2x\">Cast string to safe style</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.safeStyle=!views.safeStyle\" [ngClass]=\"views.safeStyle?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.safeStyle\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">&lt;span [ngStyle]=\"&#123;'...':('...'|safeStyle)&#125;\"&gt;"+
"\n  trusted style"+
"\n&lt;/span&gt;</span><span class=\"pad-h\">== <span [ngStyle]=\"{'...':('...'|safeStyle)}\">safe styled</span></span></pre></absolute-overflow-x></div></div><div class=\"flex3 border-grey-6x border width-full\"><div class=\"pad-h\"><h3>safeHtml</h3><p class=\"text-sm text-grey-2x\">Cast string to safe html</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.safeHtml=!views.safeHtml\" [ngClass]=\"views.safeHtml?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.safeHtml\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">&lt;span class=\"safeHtml\" [innerHtml]=\"'&lt;style&gt;.safeHtml&#123;border:1px solid purple&#125;.safeHtml::before&#123;content:\\\"trusted html\\\"&#125;&lt;/style&gt;'|safeHtml\"&gt;"+
"\n  untrusted html"+
"\n&lt;/span&gt;</span><span class=\"pad-h\">==&nbsp;</span><span class=\"safeHtml\" [innerHtml]=\"'&lt;style&gt;.safeHtml{border:1px solid purple}.safeHtml::before{content:\&quot;trusted html\&quot;}&lt;/style&gt;'|safeHtml\">untrusted html</span></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>markdownAnchor</h3><p class=\"text-sm text-grey-2x\">Cast string to a github markdown #anchor</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.markdownAnchor=!views.markdownAnchor\" [ngClass]=\"views.markdownAnchor?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.markdownAnchor\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">{{ 'Usage Examples' | markdownAnchor }}</span><span class=\"pad-h\">== {{ 'Usage Examples' | markdownAnchor }}</span></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>typeof</h3><p class=\"text-sm text-grey-2x\">Result of native javascript typeof</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.typeof=!views.typeof\" [ngClass]=\"views.typeof?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.typeof\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">{{ 0 | typeof }}</span><span class=\"pad-h\">== {{ 0 | typeof }}</span></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>endNumberWord</h3><p class=\"text-sm text-grey-2x\">Decides to add an \"s\" at the end of a word</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.endNumberWord=!views.endNumberWord\" [ngClass]=\"views.endNumberWord?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.endNumberWord\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><div><span ngNonBindable=\"ngNonBindable\">balloon{{ 0 | endNumberWord }}</span><span class=\"pad-h\">== balloon{{ 0 | endNumberWord }}</span></div><div><span ngNonBindable=\"ngNonBindable\">balloon{{ 1 | endNumberWord }}</span><span class=\"pad-h\">== balloon{{ 1 | endNumberWord }}</span></div><div><span ngNonBindable=\"ngNonBindable\">balloon{{ 2 | endNumberWord }}</span><span class=\"pad-h\">== balloon{{ 2 | endNumberWord }}</span></div><div><span ngNonBindable=\"ngNonBindable\">balloon{{ 2 | endNumberWord }}</span><span class=\"pad-h\">== balloon{{ 2 | endNumberWord }}</span></div></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>between</h3><p class=\"text-sm text-grey-2x\">(input &gt;= a &amp;&amp; input &lt;= b) || (input &lt;= a &amp;&amp; input &gt;= b)</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.between=!views.between\" [ngClass]=\"views.between?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.between\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">{{ 10 | between : 5 : 15 }}</span><span class=\"pad-h\">== {{ 10 | between : 5 : 15 }}</span></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>numberSuffix</h3><p class=\"text-sm text-grey-2x\">suffix for a given number {{ 1|numberSuffix:1 }} {{ 2|numberSuffix:1 }} {{ 3|numberSuffix:1 }}</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.numberSuffix=!views.numberSuffix\" [ngClass]=\"views.numberSuffix?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.numberSuffix\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><div><span ngNonBindable=\"ngNonBindable\">1{{ 1 | numberSuffix }}</span><span class=\"pad-h\">== 1{{ 1 | numberSuffix }}</span></div><div><span ngNonBindable=\"ngNonBindable\">{{ 2 | numberSuffix : true }}</span><span class=\"pad-h\">== {{ 2 | numberSuffix : true }}</span></div><div><span ngNonBindable=\"ngNonBindable\">0{{ '0' | numberSuffix }}</span><span class=\"pad-h\">== 0{{ '0' | numberSuffix }}</span></div><div><span ngNonBindable=\"ngNonBindable\">{{ null | numberSuffix }}</span><span class=\"pad-h\">== {{ null | numberSuffix }}</span></div><div><span ngNonBindable=\"ngNonBindable\">13{{ '13' | numberSuffix }}</span><span class=\"pad-h\">== 13{{ '13' | numberSuffix }}</span></div><div><span ngNonBindable=\"ngNonBindable\">{{ '33' | numberSuffix : 1 }}</span><span class=\"pad-h\">== {{ '33' | numberSuffix : 1 }}</span></div></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>numberToPhone</h3><p class=\"text-sm text-grey-2x\">Converts numbers in input into basic phone format</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.numberToPhone=!views.numberToPhone\" [ngClass]=\"views.numberToPhone?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.numberToPhone\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><div><span ngNonBindable=\"ngNonBindable\">{{ 8779276969 | numberToPhone }}</span><span class=\"pad-h\">== {{ 8779276969 | numberToPhone }}</span></div><div><span ngNonBindable=\"ngNonBindable\">{{ 'L8O7V7E9D2O7C6T9O6R9S' | numberToPhone }}</span><span class=\"pad-h\">== {{ 'L8O7V7E9D2O7C6T9O6R9S' | numberToPhone }}</span></div><div><span ngNonBindable=\"ngNonBindable\">{{ 'L8O7V7E9D2O' | numberToPhone }}</span><span class=\"pad-h\">== {{ 'L8O7V7E9D2O7C6T9O6' | numberToPhone }}</span></div><div><span ngNonBindable=\"ngNonBindable\">{{ 'L8O7V7E9D2O7C6T9O6' | numberToPhone }}</span><span class=\"pad-h\">== {{ 'L8O7V7E9D2O' | numberToPhone }}</span></div></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>indexTrack</h3><p class=\"text-sm text-grey-2x\">Force ngFor into trackBy index</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.indexOf=!views.indexOf\" [ngClass]=\"views.indexOf?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.indexOf\" [@fadeInOutUp]=\"1\"><div class=\"pad-xs text-info text-sm\">Simple arrays like [\"a\",\"b\",\"c\"] are hard to work with ngFor + ngModel</div><strong>With indexTrack</strong><div *ngFor=\"let item of simpleArray; let i=index; trackBy:0|indexTrack\"><input class=\"width-full\" [(ngModel)]=\"simpleArray[i]\"/></div><absolute-overflow-x><pre class=\"code-sample margin-0\" ngNonBindable=\"ngNonBindable\">&lt;div *ngFor=\"let item of simpleArray; let i=index; trackBy:0|indexTrack\"&gt;"+
"\n  &lt;input [(ngModel)]=\"simpleArray[i]\" /&gt;"+
"\n&lt;/div&gt;</pre></absolute-overflow-x><br/><strong class=\"text-warning\">Without indexTrack</strong><div class=\"text-xs text-grey-2x pad-left-xs\">Inputs blur as you type in them</div><div *ngFor=\"let item of simpleArray; let i=index; trackBy:index\"><input class=\"width-full\" [(ngModel)]=\"simpleArray[i]\"/></div></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>arrayOfObjects</h3><p class=\"text-sm text-grey-2x\" ngNonBindable=\"ngNonBindable\">Param and cast an array into an array of &#123;value, index&#125; objects</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.arrayOfObjects=!views.arrayOfObjects\" [ngClass]=\"views.arrayOfObjects?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.arrayOfObjects\" [@fadeInOutUp]=\"1\"><div class=\"pad-xs text-warning\">Having troubles with *ngFor [(ngModel)] for simple array of strings? Try indexTrack, it's within ack-angular, first because it works far better"+
"\n</div><div class=\"pad-xs text-info text-sm\">Simple arrays like [\"a\",\"b\",\"c\"] are hard to work with ngFor + ngModel. This pipe can help with that (not as well as indexTrack pipe)</div><strong>With arrayOfObjects</strong><div *ngFor=\"let item of simpleArray|arrayOfObjects\"><input class=\"width-full\" [(ngModel)]=\"simpleArray[ item.index ]\"/></div><absolute-overflow-x><pre class=\"code-sample margin-0\" ngNonBindable=\"ngNonBindable\">&lt;div *ngFor=\"let item of simpleArray|arrayOfObjects\"&gt;"+
"\n  &lt;input [(ngModel)]=\"simpleArray[ item.index ]\" /&gt;"+
"\n&lt;/div&gt;</pre></absolute-overflow-x><br/><strong class=\"text-warning\">Without arrayOfObjects</strong><div class=\"text-xs text-grey-2x pad-left-xs\">Inputs blur as you type in them</div><div *ngFor=\"let item of simpleArray; let i=index; trackBy:index\"><input class=\"width-full\" [(ngModel)]=\"simpleArray[i]\"/></div></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>array : repeat : repeatValue</h3><p class=\"text-sm text-grey-2x\">Force any variable to array</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.array=!views.array\" [ngClass]=\"views.array?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.array\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">{{ 'a' | array }}</span><span class=\"pad-h\">== {{ 'a' | array | stringify }}</span><br/><span ngNonBindable=\"ngNonBindable\">{{ 'a' | array : 3 }}</span><span class=\"pad-h\">== {{ 'a' | array : 3 | stringify }}</span><br/><span ngNonBindable=\"ngNonBindable\">{{ ['a'] | array : 3 : 1 }}</span><span class=\"pad-h\">== {{ ['a'] | array:3:1 | stringify }}</span><br/><span ngNonBindable=\"ngNonBindable\">{{ 'a' | array : 3 : 1 }}</span><span class=\"pad-h\">== {{ 'a' | array : 3 : 1 | stringify }}</span><br/><span ngNonBindable=\"ngNonBindable\">{{ 0 | array : 3 : 'b' }}</span><span class=\"pad-h\">== {{ 0 | array : 3 : 'b' | stringify }}</span><br/><span ngNonBindable=\"ngNonBindable\">{{ 'c' | array : 3 }}</span><span class=\"pad-h\">== {{ 'c' | array : 3 | stringify }}</span></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>console</h3><p class=\"text-sm text-grey-2x\">console log result of native console.log() function</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.console=!views.console\" [ngClass]=\"views.console?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.console\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\" ngNonBindable=\"ngNonBindable\">{{ 'message1' | console : 'message2' }}"+
"\n</pre></absolute-overflow-x></div></div><div class=\"flex3 border-grey-6x border\"><div class=\"pad-h\"><h3>capitalize</h3><p class=\"text-sm text-grey-2x\">Each sentence leading word is capitalized</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.capitalize=!views.capitalize\" [ngClass]=\"views.capitalize?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.capitalize\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\" ngNonBindable=\"ngNonBindable\">{{ 'how do you do?' | capitalize }} == How do you do?"+
"\n</pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>capitalizeWords</h3><p class=\"text-sm text-grey-2x\">Every word is capitalized</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.capitalizeWords=!views.capitalizeWords\" [ngClass]=\"views.capitalizeWords?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.capitalizeWords\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\" ngNonBindable=\"ngNonBindable\">{{ 'how do you do?' | capitalizeWords }} == How Do You Do?"+
"\n</pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>bit</h3><p class=\"text-sm text-grey-2x\">Truthy value converts to: 1. Otherwise: 0</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.bit=!views.bit\" [ngClass]=\"views.bit?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.bit\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><div><span ngNonBindable=\"ngNonBindable\">{{ 'true' | bit }}</span><span>&nbsp;==&nbsp;</span><span>{{ 'true' | bit }}</span></div><div><span ngNonBindable=\"ngNonBindable\">{{ '0' | bit }}</span><span>&nbsp;==&nbsp;</span><span>{{ '0' | bit }}</span></div><div><span ngNonBindable=\"ngNonBindable\">{{ 'false' | bit }}</span><span>&nbsp;==&nbsp;</span><span>{{ 'false' | bit }}</span></div></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>boolean</h3><p class=\"text-sm text-grey-2x\">Truthy value converts to: true. Otherwise: false</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.boolean=!views.boolean\" [ngClass]=\"views.boolean?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.boolean\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><div><span ngNonBindable=\"ngNonBindable\">{{ 1 | boolean }}</span><span>&nbsp;==&nbsp;</span><span>{{ 1 | boolean }}</span></div><div><span ngNonBindable=\"ngNonBindable\">{{ '0' | boolean }}</span><span>&nbsp;==&nbsp;</span><span>{{ '0' | boolean }}</span></div><div><span ngNonBindable=\"ngNonBindable\">{{ 'false' | boolean }}</span><span>&nbsp;==&nbsp;</span><span>{{ 'false' | boolean }}</span></div></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>yesno</h3><p class=\"text-sm text-grey-2x\">Truthy value converts to: yes. Otherwise: no</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.yesno=!views.yesno\" [ngClass]=\"views.yesno?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.yesno\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\" ngNonBindable=\"ngNonBindable\">{{ 'true' | yesno }} == yes"+
"\n</pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>YesNo</h3><p class=\"text-sm text-grey-2x\">Truthy value converts to: Yes. Otherwise: No</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.yesNo=!views.yesNo\" [ngClass]=\"views.yesNo?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.yesNo\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\" ngNonBindable=\"ngNonBindable\">{{ 1 | YesNo }} == Yes"+
"\n</pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>numbers</h3><p class=\"text-sm text-grey-2x\">Removes anything not a number from a string</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.numbers=!views.numbers\" [ngClass]=\"views.numbers?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.numbers\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\" ngNonBindable=\"ngNonBindable\">{{ 'sam123acb456xyz' | numbers }} == 123456"+
"\n</pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>keys</h3><p class=\"text-sm text-grey-2x\">List of keys for an Object</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.keys=!views.keys\" [ngClass]=\"views.keys?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.keys\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">{{ {x:1,y:2,z:3} | keys }}</span><span class=\"pad-h-sm\">==</span><span>{{ {x:1,y:2,z:3} | keys | ack:['stringify',0] }}</span></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>aDate</h3><p class=\"text-sm text-grey-2x\">A different approach @ date decorating</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.aDate=!views.aDate\" [ngClass]=\"views.aDate?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.aDate\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">{{ 0 | aDate : 'now' : 'date' : 'getTime' }}</span><span>&nbsp;== {{ 0 | aDate:'now':'date':'getTime' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ 0 | aDate : 'now' : 'hmmtt' }}</span><span>&nbsp;== {{ 0 | aDate : 'now' : 'hmmtt' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ 0 | aDate : 'now' : 'hhmmtt' }}</span><span>&nbsp;== {{ 0 | aDate : 'now' : 'hhmmtt' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ null | aDate : 'now' : 'hmmtt' }}</span><span>&nbsp;== {{ null | aDate : 'now' : 'hmmtt' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ null | aDate : 'now' : 'hhmmtt' }}</span><span>&nbsp;== {{ null | aDate : 'now' : 'hhmmtt' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ 0 | aDate : 'now' : ['addSeconds',60] : 'dateSecondDiff' }}</span><span>&nbsp;== {{ 0 | aDate : 'now' : ['addSeconds',60] : 'dateSecondDiff' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ '01/01/2014 2:00 am' | aDate : ['dateMinuteDiff','01/02/2014 2:00 am'] }}</span><span>&nbsp;== {{ '01/01/2014 2:00 am' | aDate : ['dateMinuteDiff','01/02/2014 2:00 am'] }}</span></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>aTime</h3><p class=\"text-sm text-grey-2x\">A different approach @ time decorating</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.aTime=!views.aTime\" [ngClass]=\"views.aTime?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.aTime\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">{{ 0 | aTime : 'now' : 'date' }}</span><span>&nbsp;== {{ 0 | aDate:'now':'date':'getTime' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ '13:30' | aTime : 'hhmmtt' }}</span><span>&nbsp;== {{ '13:30' | aTime : 'hhmmtt' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ '1:30 pm' | aTime : 'hhmmtt' }}</span><span>&nbsp;== {{ '1:30 pm' | aTime : 'hhmmtt' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ '12:00 am' | aTime : 'hhmmtt' }}</span><span>&nbsp;== {{ '12:00 am' | aTime : 'hhmmtt' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ '12:00 pm' | aTime : 'hhmmtt' }}</span><span>&nbsp;== {{ '12:00 pm' | aTime : 'hhmmtt' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ '13:30' | aTime : 'hhmmtt' }}</span><span>&nbsp;== {{ '13:30' | aTime : 'hhmmtt' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ '1:30 pm' | aTime : 'hhmmtt' }}</span><span>&nbsp;== {{ '1:30 pm' | aTime : 'hhmmtt' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ '12:00 am' | aTime : 'hhmmtt' }}</span><span>&nbsp;== {{ '12:00 am' | aTime : 'hhmmtt' }}</span><br/><br/><span ngNonBindable=\"ngNonBindable\">{{ '12:00 pm' | aTime : 'hhmmtt' }}</span><span>&nbsp;== {{ '12:00 pm' | aTime : 'hhmmtt' }}</span></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>aMath</h3><p class=\"text-sm text-grey-2x\">A connection to Javascript Math functions</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.aMath=!views.aMath\" [ngClass]=\"views.aMath?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.aMath\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">{{ 2.2 | aMath:'ceil' }}</span><span class=\"pad-h-sm\">==</span><span>{{ 2.2 | aMath:'ceil' }}</span></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>aString</h3><p class=\"text-sm text-grey-2x\">A connection to Javascript String functions</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.aString=!views.aString\" [ngClass]=\"views.aString?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.aString\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">{{ 2.35 | aString:['slice',-2] }}</span><span class=\"pad-h-sm\">==</span><span>{{ 2.35 | aString:['slice',-2] }}</span></pre></absolute-overflow-x></div></div><div class=\"flex2 border-grey-6x border\"><div class=\"pad-h\"><h3>ack</h3><p class=\"text-sm text-grey-2x\">A connection to objectifying functions</p></div><a class=\"text-center block border pad-xxs hover-bg-warning\" (click)=\"views.ack=!views.ack\" [ngClass]=\"views.ack?'border-energized bg-energized':'border-info bg-info'\">view details</a><div *ngIf=\"views.ack\" [@fadeInOutUp]=\"1\"><absolute-overflow-x><pre class=\"code-sample margin-0\"><span ngNonBindable=\"ngNonBindable\">{{ 0 | ack:'date':'toUtc':'date':'toString' }}</span><span class=\"pad-h-sm\">==</span><span>{{ 0 | ack:'date':'toUtc':'date':'toString' }}</span></pre></absolute-overflow-x></div></div></div><h3 class=\"margin-bottom-0\">More Pipe Examples</h3><div class=\"flex-wrap child-margin-xs child-pad-xs text-center\"><div class=\"flex-1 border border-grey-3x\"><span ngNonBindable=\"ngNonBindable\">{{ 0 | ack : 'date' : 'now' : 'hmmtt' }}</span><span class=\"text-grey-2x\">&nbsp;== {{ 0 | ack : 'date' : 'now' : 'hmmtt' }}</span></div><div class=\"flex-1 border border-grey-3x\"><span ngNonBindable=\"ngNonBindable\">{{ 0 | ack : 'date' : 'now' : 'hhmmtt' }}</span><span class=\"text-grey-2x\">&nbsp;== {{ 0 | ack : 'date' : 'now' : 'hhmmtt' }}</span></div><div class=\"flex-1 border border-grey-3x\"><span ngNonBindable=\"ngNonBindable\">{{ null | ack : 'date' : 'now' : 'hmmtt' }}</span><span class=\"text-grey-2x\">&nbsp;== {{ null | ack : 'date' : 'now' : 'hmmtt' }}</span></div><div class=\"flex-1 border border-grey-3x\"><span ngNonBindable=\"ngNonBindable\">{{ null | ack : 'date' : 'now' : 'hhmmtt' }}</span><span class=\"text-grey-2x\">&nbsp;== {{ null | ack : 'date' : 'now' : 'hhmmtt' }}</span></div><div class=\"flex-1 border border-grey-3x\"><span ngNonBindable=\"ngNonBindable\">{{ 0 | ack : 'date' : 'now' : ['addSeconds',60] : 'dateSecondDiff' }}</span><span class=\"text-grey-2x\">&nbsp;== {{ 0 | ack : 'date' : 'now' : ['addSeconds',60] : 'dateSecondDiff' }}</span></div><div class=\"flex-1 border border-grey-3x\"><span ngNonBindable=\"ngNonBindable\">{{ '01/01/2014 2:00 am' | ack : 'date' : ['dateMinuteDiff','01/02/2014 2:00 am'] }}</span><span class=\"text-grey-2x\">&nbsp;== {{ '01/01/2014 2:00 am' | ack : 'date' : ['dateMinuteDiff','01/02/2014 2:00 am'] }}</span></div></div>"