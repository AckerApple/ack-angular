{"version":3,"sources":["../src/pipes.ts"],"names":[],"mappings":"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","file":"pipes.js","sourceRoot":"","sourcesContent":["import { Pipe } from '@angular/core';\nexport { pipes } from \"./pipes.class\"\nimport { pipes } from \"./pipes.class\"\n\n export class Capitalize {\n  transform(input:any){\n    return pipes.capitalize(input)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'capitalize'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class CapitalizeWords {\n  transform(input:any){\n    return pipes.capitalizeWords(input)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'capitalizeWords'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Yesno {\n  transform(input:any){\n    return pipes.yesno(input)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'yesno'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class YesNo {\n  transform(input:any){\n    return pipes.yesNo(input)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'YesNo'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Numbers {\n  transform(input:any){\n    return pipes.numbers(input)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'numbers'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class Keys {\n  transform(input:any){\n    if(input)return Object.keys(input)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'keys'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class TypeofPipe {\n  transform(input:any){\n    return typeof(input)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'typeof'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n export class ConsolePipe {\n  transform(){\n    return console.log.apply(console,arguments)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'console'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nexport const declarations = [\n  Capitalize,\n  CapitalizeWords,\n  Yesno,\n  YesNo,\n  Numbers,\n  Keys,\n  TypeofPipe,\n  ConsolePipe\n]\n\nexport function getDeclarations(){\n  return declarations\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}