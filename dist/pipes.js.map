{"version":3,"file":"pipes.js","sourceRoot":"","sources":["../src/pipes.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACrC,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAA;AACrC,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAA;AAET,IAAa,UAAU,GAAvB;IAC1B,SAAS,CAAC,KAAS;QACjB,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;IAChC,CAAC;CACF,CAAA;AAJwC,UAAU;IAAlD,IAAI,CAAC,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC;GAAc,UAAU,CAIlD;SAJwC,UAAU;AAMlB,IAAa,eAAe,GAA5B;IAC/B,SAAS,CAAC,KAAS;QACjB,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,CAAA;IACrC,CAAC;CACF,CAAA;AAJ6C,eAAe;IAA5D,IAAI,CAAC,EAAC,IAAI,EAAE,iBAAiB,EAAC,CAAC;GAAc,eAAe,CAI5D;SAJ6C,eAAe;AAMtC,IAAa,KAAK,GAAlB;IACrB,SAAS,CAAC,KAAS;QACjB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IAC3B,CAAC;CACF,CAAA;AAJmC,KAAK;IAAxC,IAAI,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;GAAc,KAAK,CAIxC;SAJmC,KAAK;AAMlB,IAAa,KAAK,GAAlB;IACrB,SAAS,CAAC,KAAS;QACjB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IAC3B,CAAC;CACF,CAAA;AAJmC,KAAK;IAAxC,IAAI,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;GAAc,KAAK,CAIxC;SAJmC,KAAK;AAMhB,IAAa,OAAO,GAApB;IACvB,SAAS,CAAC,KAAS;QACjB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;IAC7B,CAAC;CACF,CAAA;AAJqC,OAAO;IAA5C,IAAI,CAAC,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC;GAAc,OAAO,CAI5C;SAJqC,OAAO;AAMvB,IAAa,IAAI,GAAjB;IACpB,SAAS,CAAC,KAAS;QACjB,EAAE,CAAA,CAAC,KAAK,CAAC;YAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACpC,CAAC;CACF,CAAA;AAJkC,IAAI;IAAtC,IAAI,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;GAAc,IAAI,CAItC;SAJkC,IAAI;AAMf,IAAa,UAAU,GAAvB;IACtB,SAAS,CAAC,KAAS;QACjB,MAAM,CAAC,OAAM,CAAC,KAAK,CAAC,CAAA;IACtB,CAAC;CACF,CAAA;AAJoC,UAAU;IAA9C,IAAI,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;GAAc,UAAU,CAI9C;SAJoC,UAAU;AAMtB,IAAa,WAAW,GAAxB;IACvB,SAAS;QACP,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAC,SAAS,CAAC,CAAA;IAC7C,CAAC;CACF,CAAA;AAJqC,WAAW;IAAhD,IAAI,CAAC,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC;GAAc,WAAW,CAIhD;SAJqC,WAAW;AAMjD,MAAM,CAAC,MAAM,YAAY,GAAG;IAC1B,UAAU;IACV,eAAe;IACf,KAAK;IACL,KAAK;IACL,OAAO;IACP,IAAI;IACJ,UAAU;IACV,WAAW;CACZ,CAAA;AAED,MAAM;IACJ,MAAM,CAAC,YAAY,CAAA;AACrB,CAAC","sourcesContent":["import { Pipe } from '@angular/core';\nexport { pipes } from \"./pipes.class\"\nimport { pipes } from \"./pipes.class\"\n\n@Pipe({name: 'capitalize'}) export class Capitalize {\n  transform(input:any){\n    return pipes.capitalize(input)\n  }\n}\n\n@Pipe({name: 'capitalizeWords'}) export class CapitalizeWords {\n  transform(input:any){\n    return pipes.capitalizeWords(input)\n  }\n}\n\n@Pipe({name: 'yesno'}) export class Yesno {\n  transform(input:any){\n    return pipes.yesno(input)\n  }\n}\n\n@Pipe({name: 'YesNo'}) export class YesNo {\n  transform(input:any){\n    return pipes.yesNo(input)\n  }\n}\n\n@Pipe({name: 'numbers'}) export class Numbers {\n  transform(input:any){\n    return pipes.numbers(input)\n  }\n}\n\n@Pipe({name: 'keys'}) export class Keys {\n  transform(input:any){\n    if(input)return Object.keys(input)\n  }\n}\n\n@Pipe({name: 'typeof'}) export class TypeofPipe {\n  transform(input:any){\n    return typeof(input)\n  }\n}\n\n@Pipe({name: 'console'}) export class ConsolePipe {\n  transform(){\n    return console.log.apply(console,arguments)\n  }\n}\n\nexport const declarations = [\n  Capitalize,\n  CapitalizeWords,\n  Yesno,\n  YesNo,\n  Numbers,\n  Keys,\n  TypeofPipe,\n  ConsolePipe\n]\n\nexport function getDeclarations(){\n  return declarations\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}