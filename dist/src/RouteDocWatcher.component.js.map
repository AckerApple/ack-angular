{"version":3,"file":"RouteDocWatcher.component.js","sourceRoot":"","sources":["../../src/RouteDocWatcher.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { TransitionService } from \"ui-router-ng2\";\nimport { Directive, Input, Output, EventEmitter } from \"@angular/core\"\nimport { RouteWatcher } from \"./RouteWatcher.class\"\n\n@Directive({\n  //inputs:['ref'],\n  selector: 'route-doc-watcher'\n}) export class RouteDocWatcher{\n  public $document\n  public $scope\n  //public RouteWatcher : RouteWatcher\n  static parameters = [[RouteWatcher],[TransitionService]]\n  public docCallbacks\n  //public isBackButton\n  //public isNotBackButton\n  //public mouseover\n\n  @Output(\"onChange\") public stateChanger = new EventEmitter()\n  @Output(\"beforeChange\") public beforeChanger = new EventEmitter()\n  @Input() public onLoad\n  @Input() public ref//variable reference\n  @Output() public refChange = new EventEmitter()\n\n  constructor(public RouteWatcher:RouteWatcher, public TransitionService:TransitionService){\n    this.$document = document\n\n    this.docCallbacks = RouteWatcher.getDocumentCallbacks()\n    \n    TransitionService.onStart({to:'*'}, transition=>{\n      this.beforeChanger.emit( this.RouteWatcher )\n    })\n\n    TransitionService.onSuccess({to:'*'}, transition=>{\n      //ensure smallest gap in digest occurs for things like animation swapping\n      setTimeout(()=>this.stateChanger.emit( this.RouteWatcher ), 0)\n    })\n\n    RouteWatcher.watchDocByCallbacks(this.$document, this.docCallbacks)\n  }\n\n  ngOnDestroy(){\n    this.RouteWatcher.unwatchDocByCallbacks(this.$document, this.docCallbacks)\n  }\n\n  ngOnInit(){\n    this.ref = this.RouteWatcher\n    setTimeout(()=>this.refChange.emit(this.ref), 0)\n\n    if(this.onLoad){\n      this.onLoad({\n        state:this.RouteWatcher.$state.current,\n        params:this.RouteWatcher.$state.params,\n        current:this.RouteWatcher.$state.current\n      })\n    }\n  }\n\n  goBackTo(name, params){\n    this.RouteWatcher.goBackTo(name, params)\n  }\n\n  tryBack(name, params){\n    this.RouteWatcher.tryBack(name, params)\n  }\n}"]}