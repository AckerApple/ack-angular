{"version":3,"file":"pipes.class.js","sourceRoot":"","sources":["src/pipes.class.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,IAAM,KAAK,GAAG;IACnB,KAAK,EAAC,eAAe,KAAS;QAC5B,EAAE,CAAA,CAAC,KAAK,IAAE,IAAI,CAAC;YAAA,MAAM,CAAC,KAAK,CAAA;QAC3B,MAAM,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,KAAK,EAAC,eAAe,KAAS;QAC5B,EAAE,CAAA,CAAC,KAAK,IAAE,IAAI,CAAC;YAAA,MAAM,CAAC,KAAK,CAAA;QAC3B,MAAM,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,OAAO,EAAC,iBAAiB,KAAS;QAChC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,EAAC,EAAE,CAAC,GAAG,KAAK,CAAA;IAC5D,CAAC;IAED,eAAe,EAAC,yBAAyB,KAAS;QAChD,IAAI,GAAG,GAAG,mBAAmB,CAAA;QAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,UAAS,GAAO,IAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA,CAAA,CAAC,CAAC,GAAG,EAAE,CAAA;IACjI,CAAC;IAED,wCAAwC;IACxC,UAAU,EAAC,oBAAoB,KAAS;QACtC,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QAClC,IAAI,GAAG,GAAG,mBAAmB,CAAA;QAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,uBAAuB,CAAC,GAAG,EAAE,CAAA;IAC3E,CAAC;IAED,uBAAuB,EAAC,iCAAiC,KAAS;QAChE,IAAI,GAAG,GAAG,aAAa,CAAA;QACvB,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,UAAS,GAAO,IAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA,CAAA,CAAC,CAAC,GAAG,EAAE,CAAA;IACjJ,CAAC;IAED,aAAa,EAAC,uBAAuB,KAAS;QAC5C,IAAI,GAAG,GAAG,gBAAgB,CAAA;QAC1B,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,UAAS,GAAO,IAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA,CAAA,CAAC,CAAC,GAAG,EAAE,CAAA;IACjI,CAAC;CACF,CAAA","sourcesContent":["export const pipes = {\n  yesno:function yesno(input:any){\n    if(input==null)return input\n    return input ? 'yes' : 'no';\n  },\n\n  yesNo:function yesNo(input:any){\n    if(input==null)return input\n    return input ? 'Yes' : 'No';\n  },\n\n  numbers:function numbers(input:any){\n    return input ? String(input).replace(/[^0-9]/g,'') : input\n  },\n\n  capitalizeWords:function capitalizeWords(input:any){\n    var reg = /[^\\W_]+[^\\s-]* */g\n    return (!!input) ? input.replace(reg, function(txt:any){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()}) : ''\n  },\n\n  /** each sentence word is capitalized */\n  capitalize:function capitalize(input:any){\n    input = pipes.capitalizeOne(input)\n    var reg = /[.?!][\\s\\r\\t]+\\w/g\n    return (!!input) ? input.replace(reg, pipes.capitalizeAfterSentence) : ''\n  },\n\n  capitalizeAfterSentence:function capitalizeAfterSentence(input:any){\n    var reg = /[\\s\\r\\t]\\w/g\n    return (!!input) ? input.replace(reg, function(txt:any){return txt.charAt(0) + txt.charAt(1).toUpperCase() + txt.substr(2).toLowerCase()}) : ''\n  },\n\n  capitalizeOne:function capitalizeOne(input:any) {\n    var reg = /[^\\W_]+[^\\s-]*/\n    return (!!input) ? input.replace(reg, function(txt:any){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()}) : ''\n  }\n}\n"]}