{"version":3,"sources":["../src/RouteReporter.component.ts"],"names":[],"mappings":"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","file":"RouteReporter.component.js","sourceRoot":"","sourcesContent":["//import { TransitionService } from \"ui-router-ng2\";\nimport { Directive, Input, Output, EventEmitter } from \"@angular/core\"\nimport { RouteWatchReporter } from \"./RouteWatchReporter\"\nimport { NavigationStart, NavigationEnd } from '@angular/router';\n\n export class RouteReporter{\n  public $document\n  public $scope\n  static parameters = [[\n    RouteWatchReporter\n  ]]\n  public docCallbacks\n  //public isBackButton\n  //public isNotBackButton\n  //public mouseover\n\n   public stateChanger = new EventEmitter()\n   public beforeChanger = new EventEmitter()\n   public onLoad\n   public ref//variable reference\n   public refChange = new EventEmitter()\n\n  constructor(public RouteWatchReporter:RouteWatchReporter){\n    this.$document = document\n    this.docCallbacks = RouteWatchReporter.getDocumentCallbacks()\n\n    RouteWatchReporter.router.events.subscribe(event=>{\n      //if(event.constructor == NavigationStart){}\n      if(event.constructor == NavigationEnd){\n        this.beforeChanger.emit( this.RouteWatchReporter )\n\n        //allow one process to occur before reporting state has changed\n        setTimeout(()=>this.stateChanger.emit( this.RouteWatchReporter ), 0)\n      }\n    })\n\n    RouteWatchReporter.watchDocByCallbacks(this.$document, this.docCallbacks)\n  }\n\n  ngOnDestroy(){\n    this.RouteWatchReporter.unwatchDocByCallbacks(this.$document, this.docCallbacks)\n  }\n\n  ngOnInit(){\n    setTimeout(()=>{\n      this.ref = this.RouteWatchReporter\n      this.refChange.emit(this.ref)\n    }, 0)\n\n    if(this.onLoad){\n      this.onLoad({\n        state:this.RouteWatchReporter.current,\n        params:this.RouteWatchReporter.current.params,\n        current:this.RouteWatchReporter.current\n      })\n    }\n  }\n\n  goBackTo(name, params){\n    this.RouteWatchReporter.goBackTo(name, params)\n  }\n\n  tryBack(name, params){\n    this.RouteWatchReporter.tryBack(name, params)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  //inputs:['ref'],\n  selector: 'route-reporter'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RouteWatchReporter, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'stateChanger': [{ type: Output, args: [\"onChange\", ] },],\n'beforeChanger': [{ type: Output, args: [\"beforeChange\", ] },],\n'onLoad': [{ type: Input },],\n'ref': [{ type: Input },],\n'refChange': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}