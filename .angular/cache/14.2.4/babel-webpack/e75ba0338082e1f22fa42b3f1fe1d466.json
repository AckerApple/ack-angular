{"ast":null,"code":"import { ElementRef, EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport let PxFromHtmlTop = /*#__PURE__*/(() => {\n  class PxFromHtmlTop {\n    constructor(ElementRef) {\n      this.ElementRef = ElementRef;\n      this.numberChange = new EventEmitter();\n\n      this.onScroll = () => {\n        this.setter();\n        this.emit();\n      };\n\n      window.addEventListener(\"resize\", this.onScroll);\n      window.addEventListener(\"scroll\", this.onScroll);\n    }\n\n    emit() {\n      this.numberChange.emit(this.number);\n    }\n\n    ngOnChanges() {\n      Promise.resolve().then(() => {\n        this.setter();\n        this.emit();\n      });\n      this.delayFire(250);\n      this.delayFire(750);\n      this.delayFire(1500);\n    }\n\n    setter() {\n      const top = this.ElementRef.nativeElement.getBoundingClientRect().top;\n      this.number = top;\n    }\n\n    ngAfterViewInit() {\n      this.delayFire();\n      this.delayFire(200);\n    }\n\n    delayFire(num = 0) {\n      setTimeout(() => {\n        this.setter();\n        this.emit();\n      }, num);\n    }\n\n    ngOnDestroy() {\n      window.removeEventListener(\"scroll\", this.onScroll);\n      window.removeEventListener(\"resize\", this.onScroll);\n    }\n\n  }\n\n  PxFromHtmlTop.ɵfac = function PxFromHtmlTop_Factory(t) {\n    return new (t || PxFromHtmlTop)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  PxFromHtmlTop.ɵdir = i0.ɵɵdefineDirective({\n    type: PxFromHtmlTop,\n    selectors: [[\"\", \"pxFromHtmlTop\", \"\"]],\n    inputs: {\n      number: [\"pxFromHtmlTop\", \"number\"],\n      watch: \"watch\"\n    },\n    outputs: {\n      numberChange: \"pxFromHtmlTopChange\"\n    },\n    exportAs: [\"PxFromHtmlTop\"],\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return PxFromHtmlTop;\n})();","map":null,"metadata":{},"sourceType":"module"}