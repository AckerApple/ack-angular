{"ast":null,"code":"import { WindowService } from \"./WindowService\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./WindowService\";\nexport let UrlVars = /*#__PURE__*/(() => {\n  class UrlVars {\n    constructor(WindowService) {\n      this.WindowService = WindowService;\n      this.vars = this.parse();\n    }\n\n    parse() {\n      var regex = /[?&]([^=#]+)(=([^&#]*))?/g,\n          url = this.WindowService.nativeWindow.location.href,\n          params = {},\n          match;\n\n      while (match = regex.exec(url)) {\n        params[match[1]] = match[2] == null ? true : match[3];\n      }\n\n      return params;\n    }\n\n    get(name, param) {\n      if (!name) return;\n      if (this.vars && this.vars[name] != null) return this.vars[name];\n      var lcase = name.toLowerCase();\n\n      for (var key in this.vars) {\n        if (lcase == key.toLowerCase()) return this.vars[key];\n      }\n\n      return param;\n    }\n\n  }\n\n  UrlVars.ɵfac = function UrlVars_Factory(t) {\n    return new (t || UrlVars)(i0.ɵɵinject(i1.WindowService));\n  };\n\n  UrlVars.ɵprov = i0.ɵɵdefineInjectable({\n    token: UrlVars,\n    factory: UrlVars.ɵfac\n  });\n  return UrlVars;\n})();","map":null,"metadata":{},"sourceType":"module"}