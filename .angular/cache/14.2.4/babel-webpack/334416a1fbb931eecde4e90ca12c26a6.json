{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { HtmlSizeService } from \"./HtmlSizeWatcher\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./HtmlSizeWatcher\";\nexport let ScreenHeightModel = /*#__PURE__*/(() => {\n  class ScreenHeightModel {\n    constructor(HtmlSizeService) {\n      this.HtmlSizeService = HtmlSizeService;\n      this.modelChange = new EventEmitter();\n      this.sub = this.HtmlSizeService.change.subscribe(() => this.changed());\n      this.HtmlSizeService.checkWatchers();\n    }\n\n    ngAfterViewInit() {\n      Promise.resolve().then(() => this.updateModel());\n      this.delayCheck(250);\n      this.delayCheck(1500);\n    }\n\n    delayCheck(num = 0) {\n      setTimeout(() => this.updateModel(), num);\n    }\n\n    changed() {\n      if (!this.HtmlSizeService.htmlSize || !this.hasChanged()) return;\n      this.updateModel();\n    }\n\n    hasChanged() {\n      return this.model !== window.innerHeight;\n    }\n\n    updateModel() {\n      this.model = window.innerHeight;\n      this.modelChange.emit(this.model);\n    }\n\n  }\n\n  ScreenHeightModel.ɵfac = function ScreenHeightModel_Factory(t) {\n    return new (t || ScreenHeightModel)(i0.ɵɵdirectiveInject(i1.HtmlSizeService));\n  };\n\n  ScreenHeightModel.ɵdir = i0.ɵɵdefineDirective({\n    type: ScreenHeightModel,\n    selectors: [[\"\", \"screenHeightModel\", \"\"]],\n    inputs: {\n      model: [\"screenHeightModel\", \"model\"]\n    },\n    outputs: {\n      modelChange: \"screenHeightModelChange\"\n    },\n    exportAs: [\"ScreenHeightModel\"]\n  });\n  return ScreenHeightModel;\n})();","map":null,"metadata":{},"sourceType":"module"}