{"ast":null,"code":"export class TemplateReader {\n  constructor(options) {\n    this.types = {};\n    this.templates = {};\n    Object.assign(this, options);\n  }\n\n  readTemplates(templateRefs) {\n    const count = templateRefs['_results'].length;\n\n    for (let x = count - 1; x >= 0; --x) {\n      let row = templateRefs['_results'][x];\n      this.applyReferences(row._def.references, row);\n    }\n\n    if (this.lastTemplateName && (!this.templates[this.lastTemplateName] || !templateRefs.length)) {\n      this.afterReadTemplates(templateRefs);\n    }\n  }\n\n  afterReadTemplates(templateRefs) {\n    const index = templateRefs['_results'].length - 1;\n    const lastTemplate = templateRefs['_results'][index];\n    if (!lastTemplate || !this.lastTemplateName) return;\n    const matched = this.applyReferences(lastTemplate._def.references, lastTemplate);\n\n    if (!matched) {\n      this.templates[this.lastTemplateName] = lastTemplate;\n    }\n  }\n\n  applyReferences(refs, row) {\n    for (let x in refs) {\n      if (this.types[x]) {\n        this.templates[this.types[x]] = row;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}