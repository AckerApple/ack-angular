{"ast":null,"code":"import { EventEmitter, ElementRef, TemplateRef } from \"@angular/core\";\nimport { AckApp } from \"../providers/AckApp.provider\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../providers/AckApp.provider\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./AckModalLayout.component\";\nconst _c0 = [\"body\"];\nconst _c1 = [\"placeholder\"];\n\nfunction AckModal_ng_template_0_ng_template_1_Template(rf, ctx) {}\n\nfunction AckModal_ng_template_0_ng_content_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"!body\"]);\n  }\n}\n\nfunction AckModal_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ack-modal-layout\", 2);\n    i0.ɵɵlistener(\"close\", function AckModal_ng_template_0_Template_ack_modal_layout_close_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.close.emit($event));\n    })(\"showModelChange\", function AckModal_ng_template_0_Template_ack_modal_layout_showModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.showModelChange.emit(ctx_r7.showModel = $event));\n    });\n    i0.ɵɵtemplate(1, AckModal_ng_template_0_ng_template_1_Template, 0, 0, \"ng-template\", 3);\n    i0.ɵɵtemplate(2, AckModal_ng_template_0_ng_content_2_Template, 1, 0, \"ng-content\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"zIndex\", ctx_r1.zIndex)(\"valign\", ctx_r1.valign)(\"isModelMode\", ctx_r1.isModelMode == null ? ctx_r1.showModelChange.observers.length : ctx_r1.isModelMode)(\"showModel\", ctx_r1.showModel)(\"backgroundColor\", ctx_r1.backgroundColor)(\"wrapStyle\", ctx_r1.wrapStyle)(\"wrapCellStyle\", ctx_r1.wrapCellStyle)(\"allowClose\", ctx_r1.allowClose);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.body);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.body);\n  }\n}\n\nfunction AckModal_2_ng_template_0_Template(rf, ctx) {}\n\nfunction AckModal_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AckModal_2_ng_template_0_Template, 0, 0, \"ng-template\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.layout);\n  }\n}\n\nconst _c2 = [\"*\"];\nexport let AckModal = /*#__PURE__*/(() => {\n  class AckModal {\n    constructor(element, AckApp) {\n      this.element = element;\n      this.AckApp = AckApp;\n      this.zIndex = 20;\n      this.valign = 'top';\n      this.allowClose = true;\n      this.showModelChange = new EventEmitter();\n      this.close = new EventEmitter();\n      Promise.resolve().then(() => this.determineStage());\n    }\n\n    determineStage() {\n      if (this.inline) return;\n\n      if (this.AckApp.fixedElementStage) {\n        this.AckApp.registerModal(this);\n      } else if (!this.AckApp.warnedFixElements) {\n        this.AckApp.warnedFixElements = true;\n        console.warn('Please put the element tag <ack-fixed-element-stage> inside your app so <ack-modal> renders properly amongst other elements. OR set <ack-modal inline=\"true\">');\n      }\n    }\n\n    ngOnDestroy() {\n      this.AckApp.unregisterModal(this);\n    }\n\n  }\n\n  AckModal.ɵfac = function AckModal_Factory(t) {\n    return new (t || AckModal)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.AckApp));\n  };\n\n  AckModal.ɵcmp = i0.ɵɵdefineComponent({\n    type: AckModal,\n    selectors: [[\"ack-modal\"]],\n    contentQueries: function AckModal_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.body = _t.first);\n      }\n    },\n    viewQuery: function AckModal_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.layout = _t.first);\n      }\n    },\n    inputs: {\n      inline: \"inline\",\n      isModelMode: \"isModelMode\",\n      zIndex: \"zIndex\",\n      valign: \"valign\",\n      wrapStyle: \"wrapStyle\",\n      wrapCellStyle: \"wrapCellStyle\",\n      backgroundColor: \"backgroundColor\",\n      allowClose: \"allowClose\",\n      showModel: \"showModel\"\n    },\n    outputs: {\n      showModelChange: \"showModelChange\",\n      close: \"close\"\n    },\n    ngContentSelectors: _c2,\n    decls: 3,\n    vars: 1,\n    consts: [[\"placeholder\", \"\"], [4, \"ngIf\"], [3, \"zIndex\", \"valign\", \"isModelMode\", \"showModel\", \"backgroundColor\", \"wrapStyle\", \"wrapCellStyle\", \"allowClose\", \"close\", \"showModelChange\"], [3, \"ngTemplateOutlet\"]],\n    template: function AckModal_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, AckModal_ng_template_0_Template, 3, 10, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, AckModal_2_Template, 1, 1, null, 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.AckApp.fixedElementStage || ctx.inline);\n      }\n    },\n    dependencies: [i2.NgIf, i2.NgTemplateOutlet, i3.AckModalLayout],\n    encapsulation: 2\n  });\n  return AckModal;\n})();","map":null,"metadata":{},"sourceType":"module"}