{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let Prompts = /*#__PURE__*/(() => {\n  class Prompts {\n    constructor() {\n      this.prompts = [];\n    }\n\n    remove(prompt) {\n      for (let x = this.prompts.length - 1; x >= 0; --x) {\n        if (this.prompts[x] == prompt) {\n          this.prompts.splice(x, 1);\n          return;\n        }\n      }\n    }\n\n    issuePrompt(prompt) {\n      this.prompts.push(prompt);\n      prompt.emitter.subscribe(() => this.remove(prompt));\n      return prompt.emitter;\n    }\n\n    alert(message, options = {}) {\n      options.emitter = new EventEmitter();\n      options.type = \"alert\";\n      options.message = message;\n      return this.issuePrompt(options);\n    }\n\n    confirm(message, options = {}) {\n      options.emitter = new EventEmitter();\n      options.type = \"confirm\";\n      options.message = message;\n      return this.issuePrompt(options);\n    }\n\n  }\n\n  Prompts.ɵfac = function Prompts_Factory(t) {\n    return new (t || Prompts)();\n  };\n\n  Prompts.ɵprov = i0.ɵɵdefineInjectable({\n    token: Prompts,\n    factory: Prompts.ɵfac\n  });\n  return Prompts;\n})();","map":null,"metadata":{},"sourceType":"module"}