{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { HtmlSizeService } from \"./HtmlSizeWatcher\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./HtmlSizeWatcher\";\nexport let HtmlWidthModel = /*#__PURE__*/(() => {\n  class HtmlWidthModel {\n    constructor(HtmlSizeService) {\n      this.HtmlSizeService = HtmlSizeService;\n      this.htmlWidthModelChange = new EventEmitter();\n      this.sub = this.HtmlSizeService.change.subscribe(() => this.changed());\n      this.HtmlSizeService.checkWatchers();\n    }\n\n    ngAfterViewInit() {\n      Promise.resolve().then(() => this.changed());\n    }\n\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n      this.HtmlSizeService.checkWatchers();\n    }\n\n    changed() {\n      if (!this.HtmlSizeService.htmlSize || !this.hasChanged()) return;\n      this.setModel(this.HtmlSizeService.htmlSize);\n    }\n\n    hasChanged() {\n      return this.htmlWidthModel !== window.document.documentElement.clientWidth;\n    }\n\n    setModel(htmlSize) {\n      this.htmlWidthModel = htmlSize.width;\n      this.htmlWidthModelChange.emit(this.htmlWidthModel);\n    }\n\n  }\n\n  HtmlWidthModel.ɵfac = function HtmlWidthModel_Factory(t) {\n    return new (t || HtmlWidthModel)(i0.ɵɵdirectiveInject(i1.HtmlSizeService));\n  };\n\n  HtmlWidthModel.ɵdir = i0.ɵɵdefineDirective({\n    type: HtmlWidthModel,\n    selectors: [[\"\", \"htmlWidthModel\", \"\"]],\n    inputs: {\n      htmlWidthModel: \"htmlWidthModel\"\n    },\n    outputs: {\n      htmlWidthModelChange: \"htmlWidthModelChange\"\n    }\n  });\n  return HtmlWidthModel;\n})();","map":null,"metadata":{},"sourceType":"module"}