{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { EventEmitter, Output, Input, Directive } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport * as ɵngcc0 from '@angular/core';\n\nvar FxTracker = function () {\n  function FxTracker() {\n    this.history = [];\n    this.historyChange = new EventEmitter();\n    this.indexChange = new EventEmitter();\n  }\n\n  FxTracker.prototype.ngAfterViewInit = function () {\n    var _this = this;\n\n    Promise.resolve().then(function () {\n      return _this.loaded = true;\n    });\n  };\n\n  FxTracker.prototype.ngOnChanges = function (changes) {\n    if (changes.activatedRoute && changes.activatedRoute.currentValue) {\n      this.produceByRoute(this.activatedRoute);\n    } else if (changes.value) {\n      this.produceFxId(this.value);\n    }\n  };\n\n  FxTracker.prototype.produceByRoute = function (activatedRoute) {\n    var path = this.getRoutePath(activatedRoute);\n    this.produceFxId(path);\n    this.value = path;\n  };\n\n  FxTracker.prototype.produceFxId = function (value) {\n    this.history = this.history || [];\n\n    if (this.orderArray) {\n      this.id = this.produceOrderFxId(value);\n    } else {\n      this.index = this.index == null ? 0 : this.index;\n      var histLen = this.history.length;\n      var isBack = histLen && this.history[this.index + 1] == value;\n      var isForward = histLen && this.history[this.index - 1] == value;\n\n      if (isBack) {\n        this.indexChange.emit(++this.index);\n        this.id = this.id === 0 ? false : 0;\n        return this.id;\n      }\n\n      this.id = this.id === 1 ? true : 1;\n\n      if (isForward) {\n        this.indexChange.emit(--this.index);\n        return this.id;\n      }\n    }\n\n    this.history.splice(this.index, 0, value);\n    this.indexChange.emit(this.index);\n    this.history.splice(25, this.history.length);\n    this.historyChange.emit(this.history);\n    return this.id;\n  };\n\n  FxTracker.prototype.produceOrderFxId = function (value) {\n    var oldIndex = 0;\n    var newIndex = 0;\n    var oldValue = this.orderArray[this.orderIndex];\n\n    for (var index = this.orderArray.length - 1; index >= 0; --index) {\n      var item = this.orderArray[index];\n\n      if (value === item) {\n        newIndex = index;\n      }\n\n      if (oldValue === item) {\n        oldIndex = index;\n      }\n    }\n\n    this.orderIndex = newIndex;\n\n    if (newIndex <= oldIndex) {\n      return this.id = this.id === 0 ? false : 0;\n    }\n\n    return this.id = this.id === 1 ? true : 1;\n  };\n\n  FxTracker.prototype.getRoutePath = function (activatedRoute) {\n    var target = activatedRoute;\n\n    while (target.firstChild) target = target.firstChild;\n\n    return target.routeConfig.path;\n  };\n\n  FxTracker.prototype.delayOutFx = function () {\n    var _this = this;\n\n    Promise.resolve().then(function () {\n      return _this.inFx = false;\n    });\n  };\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], FxTracker.prototype, \"value\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", ActivatedRoute)], FxTracker.prototype, \"activatedRoute\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], FxTracker.prototype, \"orderArray\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], FxTracker.prototype, \"history\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], FxTracker.prototype, \"historyChange\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], FxTracker.prototype, \"index\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], FxTracker.prototype, \"indexChange\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], FxTracker.prototype, \"id\", void 0);\n\n  FxTracker.ɵfac = function FxTracker_Factory(t) {\n    return new (t || FxTracker)();\n  };\n\n  FxTracker.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FxTracker,\n    selectors: [[\"fx-tracker\"]],\n    inputs: {\n      history: \"history\",\n      value: \"value\",\n      id: \"id\",\n      index: \"index\",\n      activatedRoute: \"activatedRoute\",\n      orderArray: \"orderArray\"\n    },\n    outputs: {\n      historyChange: \"historyChange\",\n      indexChange: \"indexChange\"\n    },\n    exportAs: [\"FxTracker\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return FxTracker;\n}();\n\nexport { FxTracker }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRnhUcmFja2VyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsiRnhUcmFja2VyLmRpcmVjdGl2ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFNa0I7QUFDbEI7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19kZWNvcmF0ZSwgX19tZXRhZGF0YSB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPdXRwdXQsIElucHV0LCBEaXJlY3RpdmUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUgfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XG52YXIgRnhUcmFja2VyID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBGeFRyYWNrZXIoKSB7XG4gICAgICAgIHRoaXMuaGlzdG9yeSA9IFtdO1xuICAgICAgICB0aGlzLmhpc3RvcnlDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuaW5kZXhDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgfVxuICAgIEZ4VHJhY2tlci5wcm90b3R5cGUubmdBZnRlclZpZXdJbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBQcm9taXNlLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5sb2FkZWQgPSB0cnVlO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIEZ4VHJhY2tlci5wcm90b3R5cGUubmdPbkNoYW5nZXMgPSBmdW5jdGlvbiAoY2hhbmdlcykge1xuICAgICAgICBpZiAoY2hhbmdlcy5hY3RpdmF0ZWRSb3V0ZSAmJiBjaGFuZ2VzLmFjdGl2YXRlZFJvdXRlLmN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5wcm9kdWNlQnlSb3V0ZSh0aGlzLmFjdGl2YXRlZFJvdXRlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjaGFuZ2VzLnZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzLnByb2R1Y2VGeElkKHRoaXMudmFsdWUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBGeFRyYWNrZXIucHJvdG90eXBlLnByb2R1Y2VCeVJvdXRlID0gZnVuY3Rpb24gKGFjdGl2YXRlZFJvdXRlKSB7XG4gICAgICAgIHZhciBwYXRoID0gdGhpcy5nZXRSb3V0ZVBhdGgoYWN0aXZhdGVkUm91dGUpO1xuICAgICAgICB0aGlzLnByb2R1Y2VGeElkKHBhdGgpO1xuICAgICAgICB0aGlzLnZhbHVlID0gcGF0aDtcbiAgICB9O1xuICAgIEZ4VHJhY2tlci5wcm90b3R5cGUucHJvZHVjZUZ4SWQgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgdGhpcy5oaXN0b3J5ID0gdGhpcy5oaXN0b3J5IHx8IFtdO1xuICAgICAgICBpZiAodGhpcy5vcmRlckFycmF5KSB7XG4gICAgICAgICAgICB0aGlzLmlkID0gdGhpcy5wcm9kdWNlT3JkZXJGeElkKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaW5kZXggPSB0aGlzLmluZGV4ID09IG51bGwgPyAwIDogdGhpcy5pbmRleDtcbiAgICAgICAgICAgIHZhciBoaXN0TGVuID0gdGhpcy5oaXN0b3J5Lmxlbmd0aDtcbiAgICAgICAgICAgIHZhciBpc0JhY2sgPSBoaXN0TGVuICYmIHRoaXMuaGlzdG9yeVt0aGlzLmluZGV4ICsgMV0gPT0gdmFsdWU7XG4gICAgICAgICAgICB2YXIgaXNGb3J3YXJkID0gaGlzdExlbiAmJiB0aGlzLmhpc3RvcnlbdGhpcy5pbmRleCAtIDFdID09IHZhbHVlO1xuICAgICAgICAgICAgaWYgKGlzQmFjaykge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5kZXhDaGFuZ2UuZW1pdCgrK3RoaXMuaW5kZXgpO1xuICAgICAgICAgICAgICAgIHRoaXMuaWQgPSB0aGlzLmlkID09PSAwID8gZmFsc2UgOiAwO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmlkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5pZCA9IHRoaXMuaWQgPT09IDEgPyB0cnVlIDogMTtcbiAgICAgICAgICAgIGlmIChpc0ZvcndhcmQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmluZGV4Q2hhbmdlLmVtaXQoLS10aGlzLmluZGV4KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5pZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmhpc3Rvcnkuc3BsaWNlKHRoaXMuaW5kZXgsIDAsIHZhbHVlKTtcbiAgICAgICAgdGhpcy5pbmRleENoYW5nZS5lbWl0KHRoaXMuaW5kZXgpO1xuICAgICAgICB0aGlzLmhpc3Rvcnkuc3BsaWNlKDI1LCB0aGlzLmhpc3RvcnkubGVuZ3RoKTtcbiAgICAgICAgdGhpcy5oaXN0b3J5Q2hhbmdlLmVtaXQodGhpcy5oaXN0b3J5KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWQ7XG4gICAgfTtcbiAgICBGeFRyYWNrZXIucHJvdG90eXBlLnByb2R1Y2VPcmRlckZ4SWQgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgdmFyIG9sZEluZGV4ID0gMDtcbiAgICAgICAgdmFyIG5ld0luZGV4ID0gMDtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy5vcmRlckFycmF5W3RoaXMub3JkZXJJbmRleF07XG4gICAgICAgIGZvciAodmFyIGluZGV4ID0gdGhpcy5vcmRlckFycmF5Lmxlbmd0aCAtIDE7IGluZGV4ID49IDA7IC0taW5kZXgpIHtcbiAgICAgICAgICAgIHZhciBpdGVtID0gdGhpcy5vcmRlckFycmF5W2luZGV4XTtcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gaXRlbSkge1xuICAgICAgICAgICAgICAgIG5ld0luZGV4ID0gaW5kZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob2xkVmFsdWUgPT09IGl0ZW0pIHtcbiAgICAgICAgICAgICAgICBvbGRJbmRleCA9IGluZGV4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMub3JkZXJJbmRleCA9IG5ld0luZGV4O1xuICAgICAgICBpZiAobmV3SW5kZXggPD0gb2xkSW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmlkID0gdGhpcy5pZCA9PT0gMCA/IGZhbHNlIDogMDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5pZCA9IHRoaXMuaWQgPT09IDEgPyB0cnVlIDogMTtcbiAgICB9O1xuICAgIEZ4VHJhY2tlci5wcm90b3R5cGUuZ2V0Um91dGVQYXRoID0gZnVuY3Rpb24gKGFjdGl2YXRlZFJvdXRlKSB7XG4gICAgICAgIHZhciB0YXJnZXQgPSBhY3RpdmF0ZWRSb3V0ZTtcbiAgICAgICAgd2hpbGUgKHRhcmdldC5maXJzdENoaWxkKVxuICAgICAgICAgICAgdGFyZ2V0ID0gdGFyZ2V0LmZpcnN0Q2hpbGQ7XG4gICAgICAgIHJldHVybiB0YXJnZXQucm91dGVDb25maWcucGF0aDtcbiAgICB9O1xuICAgIEZ4VHJhY2tlci5wcm90b3R5cGUuZGVsYXlPdXRGeCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5pbkZ4ID0gZmFsc2U7IH0pO1xuICAgIH07XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG4gICAgXSwgRnhUcmFja2VyLnByb3RvdHlwZSwgXCJ2YWx1ZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQWN0aXZhdGVkUm91dGUpXG4gICAgXSwgRnhUcmFja2VyLnByb3RvdHlwZSwgXCJhY3RpdmF0ZWRSb3V0ZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpXG4gICAgXSwgRnhUcmFja2VyLnByb3RvdHlwZSwgXCJvcmRlckFycmF5XCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBBcnJheSlcbiAgICBdLCBGeFRyYWNrZXIucHJvdG90eXBlLCBcImhpc3RvcnlcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgT3V0cHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG4gICAgXSwgRnhUcmFja2VyLnByb3RvdHlwZSwgXCJoaXN0b3J5Q2hhbmdlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG4gICAgXSwgRnhUcmFja2VyLnByb3RvdHlwZSwgXCJpbmRleFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBPdXRwdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbiAgICBdLCBGeFRyYWNrZXIucHJvdG90eXBlLCBcImluZGV4Q2hhbmdlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG4gICAgXSwgRnhUcmFja2VyLnByb3RvdHlwZSwgXCJpZFwiLCB2b2lkIDApO1xuICAgIEZ4VHJhY2tlciA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBEaXJlY3RpdmUoe1xuICAgICAgICAgICAgc2VsZWN0b3I6ICdmeC10cmFja2VyJyxcbiAgICAgICAgICAgIGV4cG9ydEFzOiAnRnhUcmFja2VyJ1xuICAgICAgICB9KVxuICAgIF0sIEZ4VHJhY2tlcik7XG4gICAgcmV0dXJuIEZ4VHJhY2tlcjtcbn0oKSk7XG5leHBvcnQgeyBGeFRyYWNrZXIgfTtcbiJdfQ==","map":null,"metadata":{},"sourceType":"module"}