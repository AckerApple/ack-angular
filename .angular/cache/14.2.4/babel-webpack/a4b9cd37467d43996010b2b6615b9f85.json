{"ast":null,"code":"import { EventEmitter, ElementRef } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport let FocusOn = /*#__PURE__*/(() => {\n  class FocusOn {\n    constructor(element) {\n      this.element = element;\n      this.focusOnDelay = 0;\n      this.focusThen = new EventEmitter();\n    }\n\n    ngOnChanges(changes) {\n      if (changes.focusOn && changes.focusOn.currentValue) {\n        if (this.focusOnDelay === 0) {\n          Promise.resolve().then(() => this.update());\n        } else {\n          setTimeout(() => this.update(), this.focusOnDelay);\n        }\n      }\n    }\n\n    update() {\n      this.element.nativeElement.focus();\n      this.focusThen.emit();\n    }\n\n  }\n\n  FocusOn.ɵfac = function FocusOn_Factory(t) {\n    return new (t || FocusOn)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  FocusOn.ɵdir = i0.ɵɵdefineDirective({\n    type: FocusOn,\n    selectors: [[\"\", \"focusOn\", \"\"]],\n    inputs: {\n      focusOn: \"focusOn\",\n      focusOnDelay: \"focusOnDelay\"\n    },\n    outputs: {\n      focusThen: \"focusThen\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return FocusOn;\n})();","map":null,"metadata":{},"sourceType":"module"}