{"ast":null,"code":"import { ElementRef, TemplateRef } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"reader-header\"];\n\nfunction ReaderHeaderBody_tr_4_2_ng_template_0_Template(rf, ctx) {}\n\nfunction ReaderHeaderBody_tr_4_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ReaderHeaderBody_tr_4_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\n\nfunction ReaderHeaderBody_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtemplate(2, ReaderHeaderBody_tr_4_2_Template, 1, 0, null, 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.readerHeader);\n  }\n}\n\nconst _c1 = [\"*\"];\nexport let ReaderHeaderBody = /*#__PURE__*/(() => {\n  class ReaderHeaderBody {}\n\n  ReaderHeaderBody.ɵfac = function ReaderHeaderBody_Factory(t) {\n    return new (t || ReaderHeaderBody)();\n  };\n\n  ReaderHeaderBody.ɵcmp = i0.ɵɵdefineComponent({\n    type: ReaderHeaderBody,\n    selectors: [[\"reader-header-body\"]],\n    contentQueries: function ReaderHeaderBody_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.readerHeader = _t.first);\n      }\n    },\n    ngContentSelectors: _c1,\n    decls: 8,\n    vars: 1,\n    consts: [[2, \"text-align\", \"center\", \"height\", \"100%\"], [2, \"display\", \"inline-block\", \"width\", \"100%\", \"height\", \"100%\", \"max-width\", \"1000px\"], [2, \"width\", \"100%\", \"height\", \"100%\"], [\"cellpadding\", \"0\", \"cellspacing\", \"0\", 2, \"width\", \"100%\", \"height\", \"100%\"], [4, \"ngIf\"], [2, \"height\", \"100%\"], [4, \"ngTemplateOutlet\"]],\n    template: function ReaderHeaderBody_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"table\", 3);\n        i0.ɵɵtemplate(4, ReaderHeaderBody_tr_4_Template, 3, 1, \"tr\", 4);\n        i0.ɵɵelementStart(5, \"tr\")(6, \"td\", 5);\n        i0.ɵɵprojection(7);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.readerHeader);\n      }\n    },\n    dependencies: [i1.NgIf, i1.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return ReaderHeaderBody;\n})();\nexport let ReaderHeader = /*#__PURE__*/(() => {\n  class ReaderHeader {}\n\n  ReaderHeader.ɵfac = function ReaderHeader_Factory(t) {\n    return new (t || ReaderHeader)();\n  };\n\n  ReaderHeader.ɵdir = i0.ɵɵdefineDirective({\n    type: ReaderHeader,\n    selectors: [[\"reader-header\"]]\n  });\n  return ReaderHeader;\n})();\nexport let ReaderBody = /*#__PURE__*/(() => {\n  class ReaderBody {\n    constructor(element) {\n      this.element = element;\n      element.nativeElement.style.height = '100%';\n      element.nativeElement.style.display = 'block';\n    }\n\n  }\n\n  ReaderBody.ɵfac = function ReaderBody_Factory(t) {\n    return new (t || ReaderBody)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  ReaderBody.ɵdir = i0.ɵɵdefineDirective({\n    type: ReaderBody,\n    selectors: [[\"reader-body\"]],\n    contentQueries: function ReaderBody_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.readerHeader = _t.first);\n      }\n    }\n  });\n  return ReaderBody;\n})();","map":null,"metadata":{},"sourceType":"module"}