{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let Log = /*#__PURE__*/(() => {\n  class Log {\n    constructor() {\n      this.log = [];\n      this.maxLog = 80;\n    }\n\n    add(e, toConsole) {\n      const ob = this.paramAudit(e, toConsole);\n      this.log.unshift(ob);\n\n      if (this.maxLog) {\n        while (this.log.length > this.maxLog) {\n          this.log.pop();\n        }\n      }\n\n      return e;\n    }\n\n    paramAudit(e, toConsole) {\n      switch (e.constructor) {\n        case String:\n        case Boolean:\n        case Number:\n          {\n            e = {\n              message: e\n            };\n          }\n      }\n\n      if (toConsole == null || toConsole) console.log(e);\n      e['datetime'] = e['datetime'] || getDateTimeString();\n      return e;\n    }\n\n  }\n\n  Log.ɵfac = function Log_Factory(t) {\n    return new (t || Log)();\n  };\n\n  Log.ɵprov = i0.ɵɵdefineInjectable({\n    token: Log,\n    factory: Log.ɵfac\n  });\n  return Log;\n})();\n\nfunction getDateTimeString() {\n  return function (d) {\n    return ('0' + (d.getMonth() + 1)).slice(-2) + '/' + ('0' + d.getDate()).slice(-2) + '/' + d.getFullYear();\n  }(new Date()) + ' ' + function (d) {\n    var h = d.getHours(),\n        t = 'AM',\n        m = d.getMinutes();\n    var mn = m < 10 ? '0' + m : m;\n    h = h >= 12 ? (t = 'PM', h - 12 || 12) : h == 0 ? 12 : h;\n    return ('0' + h).slice(-2) + ':' + ('0' + mn).slice(-2) + ' ' + t;\n  }(new Date());\n}","map":null,"metadata":{},"sourceType":"module"}