{"ast":null,"code":"import * as localForage from \"localforage\";\nimport * as i0 from \"@angular/core\";\nexport let AckOffline = /*#__PURE__*/(() => {\n  class AckOffline {\n    constructor() {\n      this.prefix = \"offline\";\n    }\n\n    set(name, data) {\n      if (data && data.constructor == Object) data.offlineSavedAt = new Date().toString();\n      if (data && data.constructor == Object) data.offlineCreatedAt = data.offlineCreatedAt || new Date().toString();\n      return localForage.setItem(this.prefix + '-' + name, data);\n    }\n\n    get(name) {\n      return localForage.getItem(this.prefix + '-' + name);\n    }\n\n    remove(name) {\n      return localForage.removeItem(this.prefix + '-' + name);\n    }\n\n    clear(name) {\n      return this.remove(name);\n    }\n\n    clearAll() {\n      return this.promiseNameArray().then(keys => keys.forEach(name => this.remove(name)));\n    }\n\n    promiseNameArray() {\n      let keys = [];\n      return localForage.iterate((_, k) => {\n        if (k.startsWith(this.prefix)) {\n          keys.push(k.substring(this.prefix.length + 1, k.length));\n        }\n      }).then(() => keys);\n    }\n\n  }\n\n  AckOffline.ɵfac = function AckOffline_Factory(t) {\n    return new (t || AckOffline)();\n  };\n\n  AckOffline.ɵprov = i0.ɵɵdefineInjectable({\n    token: AckOffline,\n    factory: AckOffline.ɵfac\n  });\n  return AckOffline;\n})();","map":null,"metadata":{},"sourceType":"module"}