{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { HtmlSizeService } from \"./HtmlSizeWatcher\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./HtmlSizeWatcher\";\nexport let ScreenWidthModel = /*#__PURE__*/(() => {\n  class ScreenWidthModel {\n    constructor(HtmlSizeService) {\n      this.HtmlSizeService = HtmlSizeService;\n      this.screenWidthModelChange = new EventEmitter();\n      this.sub = this.HtmlSizeService.change.subscribe(() => this.changed());\n      this.HtmlSizeService.checkWatchers();\n\n      if (this.HtmlSizeService.htmlSize) {\n        this.changed();\n      }\n    }\n\n    changed() {\n      if (!this.HtmlSizeService.htmlSize || !this.hasChanged()) return;\n      this.updateModel();\n    }\n\n    hasChanged() {\n      return this.screenWidthModel !== window.innerWidth;\n    }\n\n    updateModel() {\n      this.screenWidthModel = window.innerWidth;\n      this.screenWidthModelChange.emit(this.screenWidthModel);\n    }\n\n  }\n\n  ScreenWidthModel.ɵfac = function ScreenWidthModel_Factory(t) {\n    return new (t || ScreenWidthModel)(i0.ɵɵdirectiveInject(i1.HtmlSizeService));\n  };\n\n  ScreenWidthModel.ɵdir = i0.ɵɵdefineDirective({\n    type: ScreenWidthModel,\n    selectors: [[\"\", \"screenWidthModel\", \"\"]],\n    inputs: {\n      screenWidthModel: \"screenWidthModel\"\n    },\n    outputs: {\n      screenWidthModelChange: \"screenWidthModelChange\"\n    }\n  });\n  return ScreenWidthModel;\n})();","map":null,"metadata":{},"sourceType":"module"}