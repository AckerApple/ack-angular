{"ast":null,"code":"import { EventEmitter, ElementRef } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport let InnerHtmlModel = /*#__PURE__*/(() => {\n  class InnerHtmlModel {\n    constructor(element) {\n      this.element = element;\n      this.innerHtmlModelChange = new EventEmitter();\n      this.observer = new MutationObserver(() => this.setModel());\n      const config = {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      };\n      this.observer.observe(this.element.nativeElement, config);\n    }\n\n    ngOnChanges() {\n      Promise.resolve().then(() => this.setModel());\n    }\n\n    setModel() {\n      this.innerHtmlModel = this.element.nativeElement.innerHTML;\n      this.innerHtmlModelChange.emit(this.innerHtmlModel);\n    }\n\n    ngOnDestroy() {\n      this.observer.disconnect();\n    }\n\n  }\n\n  InnerHtmlModel.ɵfac = function InnerHtmlModel_Factory(t) {\n    return new (t || InnerHtmlModel)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  InnerHtmlModel.ɵdir = i0.ɵɵdefineDirective({\n    type: InnerHtmlModel,\n    selectors: [[\"\", \"innerHtmlModel\", \"\"]],\n    inputs: {\n      innerHtmlModel: \"innerHtmlModel\"\n    },\n    outputs: {\n      innerHtmlModelChange: \"innerHtmlModelChange\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return InnerHtmlModel;\n})();","map":null,"metadata":{},"sourceType":"module"}