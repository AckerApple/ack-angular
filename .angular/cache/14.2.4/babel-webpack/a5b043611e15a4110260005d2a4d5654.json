{"ast":null,"code":"import { EventEmitter, ElementRef } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport let ElementSizeModel = /*#__PURE__*/(() => {\n  class ElementSizeModel {\n    constructor(element) {\n      this.element = element;\n      this.elementSizeModelChange = new EventEmitter();\n    }\n\n    ngAfterViewInit() {\n      this.onResize = () => {\n        this.setModel();\n      };\n\n      window.addEventListener('resize', this.onResize);\n      Promise.resolve().then(() => this.setModel());\n      this.observer = new MutationObserver(() => {\n        this.setModel();\n      });\n      const config = {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      };\n      this.observer.observe(this.element.nativeElement, config);\n      setTimeout(() => this.setModel(), 800);\n    }\n\n    ngOnChanges() {\n      Promise.resolve().then(() => {\n        if (!this.inChange) {\n          this.setModel();\n        }\n      });\n    }\n\n    setModel() {\n      this.elementSizeModel = this.elementSizeModel || {};\n      this.inChange = true;\n      this.elementSizeModel.width = this.element.nativeElement.offsetWidth;\n      this.elementSizeModel.height = this.element.nativeElement.offsetHeight;\n      this.elementSizeModelChange.emit(this.elementSizeModel);\n      Promise.resolve().then(() => {\n        this.inChange = false;\n      });\n    }\n\n    ngOnDestroy() {\n      this.observer.disconnect();\n      window.removeEventListener('resize', this.onResize);\n    }\n\n  }\n\n  ElementSizeModel.ɵfac = function ElementSizeModel_Factory(t) {\n    return new (t || ElementSizeModel)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  ElementSizeModel.ɵdir = i0.ɵɵdefineDirective({\n    type: ElementSizeModel,\n    selectors: [[\"\", \"elementSizeModel\", \"\"]],\n    inputs: {\n      elementSizeModelWatch: \"elementSizeModelWatch\",\n      elementSizeModel: \"elementSizeModel\"\n    },\n    outputs: {\n      elementSizeModelChange: \"elementSizeModelChange\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return ElementSizeModel;\n})();\nexport let ElementHeightModel = /*#__PURE__*/(() => {\n  class ElementHeightModel extends ElementSizeModel {\n    constructor(element) {\n      super(element);\n      this.element = element;\n      this.elementHeightModelChange = new EventEmitter();\n    }\n\n    setModel() {\n      this.elementHeightModel = this.element.nativeElement.offsetHeight;\n      this.elementHeightModelChange.emit(this.elementHeightModel);\n    }\n\n  }\n\n  ElementHeightModel.ɵfac = function ElementHeightModel_Factory(t) {\n    return new (t || ElementHeightModel)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  ElementHeightModel.ɵdir = i0.ɵɵdefineDirective({\n    type: ElementHeightModel,\n    selectors: [[\"\", \"elementHeightModel\", \"\"]],\n    inputs: {\n      elementHeightModel: \"elementHeightModel\"\n    },\n    outputs: {\n      elementHeightModelChange: \"elementHeightModelChange\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return ElementHeightModel;\n})();\nexport let ElementWidthModel = /*#__PURE__*/(() => {\n  class ElementWidthModel extends ElementSizeModel {\n    constructor(element) {\n      super(element);\n      this.element = element;\n      this.elementWidthModelChange = new EventEmitter();\n    }\n\n    setModel() {\n      this.elementWidthModel = this.element.nativeElement.offsetWidth;\n      this.elementWidthModelChange.emit(this.elementWidthModel);\n    }\n\n  }\n\n  ElementWidthModel.ɵfac = function ElementWidthModel_Factory(t) {\n    return new (t || ElementWidthModel)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  ElementWidthModel.ɵdir = i0.ɵɵdefineDirective({\n    type: ElementWidthModel,\n    selectors: [[\"\", \"elementWidthModel\", \"\"]],\n    inputs: {\n      elementWidthModel: \"elementWidthModel\"\n    },\n    outputs: {\n      elementWidthModelChange: \"elementWidthModelChange\"\n    },\n    exportAs: [\"ElementWidthModel\"],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return ElementWidthModel;\n})();","map":null,"metadata":{},"sourceType":"module"}